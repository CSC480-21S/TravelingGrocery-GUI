{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React_OpenLiberty\\\\guide-rest-client-reactjs\\\\finish\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Login_SingOut\\\\Login.js\";\nimport { React, useEffect, useState } from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport { GoogleLogin } from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button'; //Local components\n\nimport { send_Google_User_info } from '../../actions/actions';\n\nconst Login = ({\n  client_id\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [test, setTest] = useState(\"Empty\"); //when Login works\n\n  const onSuccess = response => {\n    console.log(`Login Success: currentUser ${response.profileObj}`); //console.log('Loaded: ' + loaded)\n\n    dispatch(send_Google_User_info(response));\n    setTest(response.profileObj.name);\n    history.push('/home');\n  }; //When login is a failute\n\n\n  const onFailure = response => {\n    console.log('Error: ' + response);\n  };\n\n  const {\n    signIn,\n    loaded\n  } = useGoogleLogin({\n    onSuccess: onSuccess,\n    clientId: client_id,\n    isSignedIn: true,\n    onFailure: onFailure\n  }); //=================================\n\n  useEffect(() => {\n    console.log('From login');\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(GoogleLogin, {\n    clientId: client_id,\n    buttonText: \"Login\",\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"THIS IS A TEST: \", test));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/Projects/React_OpenLiberty/guide-rest-client-reactjs/finish/src/main/frontend/src/components/Login_SingOut/Login.js"],"names":["React","useEffect","useState","useGoogleLogin","GoogleLogin","useHistory","useDispatch","Button","send_Google_User_info","Login","client_id","dispatch","history","test","setTest","onSuccess","response","console","log","profileObj","name","push","onFailure","signIn","loaded","clientId","isSignedIn"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,WAAT,QAA2B,oBAA3B;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,SAASC,qBAAT,QAAsC,uBAAtC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAC3B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,OAAD,CAAhC,CAH2B,CAI3B;;AACA,QAAMa,SAAS,GAAIC,QAAD,IAAc;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BF,QAAQ,CAACG,UAAW,EAA9D,EAD4B,CAE5B;;AACAR,IAAAA,QAAQ,CAACH,qBAAqB,CAACQ,QAAD,CAAtB,CAAR;AACAF,IAAAA,OAAO,CAACE,QAAQ,CAACG,UAAT,CAAoBC,IAArB,CAAP;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,OAAb;AACH,GAND,CAL2B,CAY3B;;;AACA,QAAMC,SAAS,GAAIN,QAAD,IAAc;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,QAAxB;AACH,GAFD;;AAIA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBrB,cAAc,CAAC;AACtCY,IAAAA,SAAS,EAAEA,SAD2B;AAEtCU,IAAAA,QAAQ,EAAEf,SAF4B;AAGtCgB,IAAAA,UAAU,EAAE,IAH0B;AAItCJ,IAAAA,SAAS,EAAEA;AAJ2B,GAAD,CAAzC,CAjB2B,CAuB3B;;AAEArB,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACI,IAAA,QAAQ,EAAER,SADd;AAEI,IAAA,UAAU,EAAC,OAFf;AAGI,IAAA,SAAS,EAAEK,SAHf;AAII,IAAA,SAAS,EAAEO,SAJf;AAKI,IAAA,YAAY,EAAE,oBALlB;AAMI,IAAA,UAAU,EAAE,IANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBT,IAApB,CAbD,CADJ;AAiBH,CA9CD;;AAgDA,eAAeJ,KAAf","sourcesContent":["import {React, useEffect, useState} from 'react'\r\n\r\nimport { useGoogleLogin } from 'react-google-login'\r\nimport { GoogleLogin} from 'react-google-login'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\n//Local components\r\nimport { send_Google_User_info } from '../../actions/actions'\r\n\r\nconst Login = ({client_id}) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [test, setTest] = useState(\"Empty\")\r\n    //when Login works\r\n    const onSuccess = (response) => {\r\n        console.log(`Login Success: currentUser ${response.profileObj}`)\r\n        //console.log('Loaded: ' + loaded)\r\n        dispatch(send_Google_User_info(response))\r\n        setTest(response.profileObj.name)\r\n        history.push('/home')\r\n    }\r\n    //When login is a failute\r\n    const onFailure = (response) => {\r\n        console.log('Error: ' + response)\r\n    }\r\n\r\n    const { signIn, loaded } = useGoogleLogin({\r\n        onSuccess: onSuccess,\r\n        clientId: client_id,\r\n        isSignedIn: true,\r\n        onFailure: onFailure,\r\n    })\r\n    //=================================\r\n\r\n    useEffect(()=>{\r\n        console.log('From login')\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <GoogleLogin\r\n                clientId={client_id}\r\n                buttonText=\"Login\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n            />\r\n            {/* <Button onClick={signIn} className='login_button'>\r\n                Login\r\n            </Button>\r\n         */}\r\n         <p>THIS IS A TEST: {test}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}