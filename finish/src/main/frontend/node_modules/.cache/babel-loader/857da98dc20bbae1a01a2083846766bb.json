{"ast":null,"code":"import _objectSpread from\"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\finish\\\\src\\\\main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\finish\\\\src\\\\main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\finish\\\\src\\\\main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\finish\\\\src\\\\main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useState}from\"react\";import Dialog from\"@material-ui/core/Dialog\";import TextField from\"@material-ui/core/TextField\";import Button from\"@material-ui/core/Button\";import CloseIcon from\"@material-ui/icons/Close\";import IconButton from\"@material-ui/core/IconButton\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import FormControl from\"@material-ui/core/FormControl\";import{useDispatch}from\"react-redux\";import makeStyles from\"../../styles/CreasteList\";import{Typography}from\"@material-ui/core\";import{useSelector}from\"react-redux\";import{create_List}from\"../../actions/actions\";var CreateList=function CreateList(props){var profile=useSelector(function(state){return state.login;});//Retrieve Login information from the store\nvar _useState=useState({id:\"\",name:\"\",userId:profile.profileObj.email}),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var styles=makeStyles();var dispatch=useDispatch();var onClose=props.onClose,open=props.open;var handleClose=function handleClose(){clearInput();onClose();};var clearInput=function clearInput(){setList({name:\" \"});};var createNewList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();dispatch(create_List(list,profile.profileObj.email));handleClose();case 3:case\"end\":return _context.stop();}}},_callee);}));return function createNewList(_x){return _ref.apply(this,arguments);};}();return React.createElement(\"div\",null,React.createElement(Dialog,{onClose:handleClose,open:open,className:styles.main},React.createElement(DialogActions,{disableSpacing:true},React.createElement(IconButton,{className:styles.exitIcon,size:\"small\",onClick:handleClose},React.createElement(CloseIcon,null))),React.createElement(DialogContent,null,\" \",React.createElement(Typography,{className:styles.title},\" Create List \")),React.createElement(\"form\",{className:\"\".concat(styles.root,\" \").concat(styles.mainContainer),onSubmit:createNewList},React.createElement(FormControl,{className:styles.formControl},React.createElement(TextField,{fullWidth:true,className:styles.inputText,value:list.name,onChange:function onChange(e){return setList(_objectSpread({},list,{name:e.target.value,id:e.target.value}));},placeholder:\"Enter Name\",InputProps:{disableUnderline:true}}),React.createElement(Button,{type:\"submit\",className:styles.submitButton},\"Create New List\"))),React.createElement(DialogActions,null)));};export default CreateList;","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/finish/src/main/frontend/src/components/HomePage/CreateList.js"],"names":["React","useState","Dialog","TextField","Button","CloseIcon","IconButton","DialogActions","DialogContent","FormControl","useDispatch","makeStyles","Typography","useSelector","create_List","CreateList","props","profile","state","login","id","name","userId","profileObj","email","list","setList","styles","dispatch","onClose","open","handleClose","clearInput","createNewList","e","preventDefault","main","exitIcon","title","root","mainContainer","formControl","inputText","target","value","disableUnderline","submitButton"],"mappings":"wwBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,OAASC,UAAT,KAA2B,mBAA3B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAASC,WAAT,KAA4B,uBAA5B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC7B,GAAMC,CAAAA,OAAO,CAAGJ,WAAW,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAjB,EAAD,CAA3B,CAAqD;AADxB,cAELlB,QAAQ,CAAC,CAChCmB,EAAE,CAAE,EAD4B,CAEhCC,IAAI,CAAE,EAF0B,CAGhCC,MAAM,CAAEL,OAAO,CAACM,UAAR,CAAmBC,KAHK,CAAD,CAFH,wCAEtBC,IAFsB,eAEhBC,OAFgB,eAO7B,GAAMC,CAAAA,MAAM,CAAGhB,UAAU,EAAzB,CACA,GAAMiB,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CAR6B,GAUrBmB,CAAAA,OAVqB,CAUHb,KAVG,CAUrBa,OAVqB,CAUZC,IAVY,CAUHd,KAVG,CAUZc,IAVY,CAY7B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACzBC,UAAU,GACVH,OAAO,GACP,CAHD,CAIA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACxBN,OAAO,CAAC,CAAEL,IAAI,CAAE,GAAR,CAAD,CAAP,CACA,CAFD,CAGA,GAAMY,CAAAA,aAAa,0FAAG,iBAAOC,CAAP,kHACrBA,CAAC,CAACC,cAAF,GACAP,QAAQ,CAACd,WAAW,CAACW,IAAD,CAAOR,OAAO,CAACM,UAAR,CAAmBC,KAA1B,CAAZ,CAAR,CACAO,WAAW,GAHU,sDAAH,kBAAbE,CAAAA,aAAa,4CAAnB,CAMA,MACC,gCACC,oBAAC,MAAD,EAAQ,OAAO,CAAEF,WAAjB,CAA8B,IAAI,CAAED,IAApC,CAA0C,SAAS,CAAEH,MAAM,CAACS,IAA5D,EACC,oBAAC,aAAD,EAAe,cAAc,KAA7B,EACC,oBAAC,UAAD,EACC,SAAS,CAAET,MAAM,CAACU,QADnB,CAEC,IAAI,CAAC,OAFN,CAGC,OAAO,CAAEN,WAHV,EAKC,oBAAC,SAAD,MALD,CADD,CADD,CAUC,oBAAC,aAAD,MACE,GADF,CAEC,oBAAC,UAAD,EAAY,SAAS,CAAEJ,MAAM,CAACW,KAA9B,kBAFD,CAVD,CAcC,4BACC,SAAS,WAAKX,MAAM,CAACY,IAAZ,aAAoBZ,MAAM,CAACa,aAA3B,CADV,CAEC,QAAQ,CAAEP,aAFX,EAIC,oBAAC,WAAD,EAAa,SAAS,CAAEN,MAAM,CAACc,WAA/B,EACC,oBAAC,SAAD,EACC,SAAS,KADV,CAEC,SAAS,CAAEd,MAAM,CAACe,SAFnB,CAGC,KAAK,CAAEjB,IAAI,CAACJ,IAHb,CAIC,QAAQ,CAAE,kBAACa,CAAD,QACTR,CAAAA,OAAO,kBAAMD,IAAN,EAAYJ,IAAI,CAAEa,CAAC,CAACS,MAAF,CAASC,KAA3B,CAAkCxB,EAAE,CAAEc,CAAC,CAACS,MAAF,CAASC,KAA/C,GADE,EAJX,CAOC,WAAW,CAAC,YAPb,CAQC,UAAU,CAAE,CACXC,gBAAgB,CAAE,IADP,CARb,EADD,CAaC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAElB,MAAM,CAACmB,YAAxC,oBAbD,CAJD,CAdD,CAoCC,oBAAC,aAAD,MApCD,CADD,CADD,CA0CA,CAnED,CAqEA,cAAe/B,CAAAA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport makeStyles from \"../../styles/CreasteList\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { create_List } from \"../../actions/actions\";\r\n\r\nconst CreateList = (props) => {\r\n\tconst profile = useSelector((state) => state.login); //Retrieve Login information from the store\r\n\tconst [list, setList] = useState({\r\n\t\tid: \"\",\r\n\t\tname: \"\",\r\n\t\tuserId: profile.profileObj.email,\r\n\t});\r\n\tconst styles = makeStyles();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { onClose, open } = props;\r\n\r\n\tconst handleClose = () => {\r\n\t\tclearInput();\r\n\t\tonClose();\r\n\t};\r\n\tconst clearInput = () => {\r\n\t\tsetList({ name: \" \" });\r\n\t};\r\n\tconst createNewList = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(create_List(list, profile.profileObj.email));\r\n\t\thandleClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog onClose={handleClose} open={open} className={styles.main}>\r\n\t\t\t\t<DialogActions disableSpacing>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={styles.exitIcon}\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseIcon></CloseIcon>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t<Typography className={styles.title}> Create List </Typography>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName={`${styles.root} ${styles.mainContainer}`}\r\n\t\t\t\t\tonSubmit={createNewList}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FormControl className={styles.formControl}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tclassName={styles.inputText}\r\n\t\t\t\t\t\t\tvalue={list.name}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetList({ ...list, name: e.target.value, id: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tdisableUnderline: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></TextField>\r\n\t\t\t\t\t\t<Button type=\"submit\" className={styles.submitButton}>\r\n\t\t\t\t\t\t\tCreate New List\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</form>\r\n\t\t\t\t<DialogActions></DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CreateList;\r\n"]},"metadata":{},"sourceType":"module"}