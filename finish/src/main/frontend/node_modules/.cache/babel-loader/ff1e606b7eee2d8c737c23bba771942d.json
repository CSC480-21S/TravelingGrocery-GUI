{"ast":null,"code":"import _slicedToArray from\"D:\\\\Projects\\\\React_OpenLiberty\\\\guide-rest-client-reactjs\\\\finish\\\\src\\\\main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Typography from\"@material-ui/core/Typography\";import{useDispatch,useSelector}from\"react-redux\";import Button from\"@material-ui/core/Button\";import{useHistory}from\"react-router-dom\";//Local imports\nimport Item from\"./Item/Item\";import{fetch_store_items}from\"../../actions/actions\";import{set_list_to_be_updated}from\"../../actions/actions\";import Search_Bar from\"./Search_Bar/Search_Bar\";import makeStyles from\"./Items_styles\";var Items=function Items(){var dispatch=useDispatch();var styles=makeStyles();var history=useHistory();var list_Name=useSelector(function(state){return state.homePage.name;});//NAME OF THE LIST THAT WE ARE GOING TO ADD ITEMS\nvar username=useSelector(function(state){return state.login.profileObj.email;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),filtered_storeList=_useState2[0],set_Filtered_storeList=_useState2[1];//filetered items\n//LIST TO BE UPDATED\nvar _useState3=useState(useSelector(function(state){return state.list_toUpdate;})),_useState4=_slicedToArray(_useState3,2),items_to_be_updated=_useState4[0],set_ItemsToBeUpdated=_useState4[1];//STORE ITEMS\nvar _useState5=useState(useSelector(function(state){return state.store_list.map(function(item){item.listId=list_Name;item.userId=username;item.count=1;item.id=Math.random().toString(36).substr(2,9);item.isChecked=false;item.isStoreItem=true;return item;});})),_useState6=_slicedToArray(_useState5,2),items=_useState6[0],set_items=_useState6[1];// IF CHECKED ADD THE ITEMS TO THE LIST TO BE UPDATED\nvar handleAdd=function handleAdd(){items.map(function(item){if(item.isChecked===true){try{item.isChecked=false;items_to_be_updated.push(item);//push returns the new index of the array\nset_ItemsToBeUpdated(items_to_be_updated);}catch(error){console.log(error);}}});//console.log(`ITMES TO BE ADDED: ${JSON.stringify(items)}`);\nhistory.goBack();dispatch(set_list_to_be_updated(items_to_be_updated));};//====================================================\n//FETCH STORE ITEMS\nuseEffect(function(){dispatch(fetch_store_items());},[dispatch]);return React.createElement(\"div\",null,React.createElement(Search_Bar,{items:items,set_Filtered_storeList:set_Filtered_storeList}),React.createElement(\"div\",{className:styles.text},React.createElement(Typography,{style:{fontFamily:\"Inter\",fontWeight:\"600\"}},\"Adding Items to \",list_Name)),React.createElement(\"div\",null,filtered_storeList.length===0?items.map(function(item){return React.createElement(Item,{key:item.id,item:item,items:items,set_items:set_items});}):filtered_storeList.map(function(item){return React.createElement(Item,{key:item.id,item:item,items:items,set_items:set_items});})),React.createElement(\"div\",null,React.createElement(Button,{className:styles.add,onClick:handleAdd},\"Add Items\")));};export default Items;","map":{"version":3,"sources":["D:/Projects/React_OpenLiberty/guide-rest-client-reactjs/finish/src/main/frontend/src/components/Items/Items.js"],"names":["React","useEffect","useState","Typography","useDispatch","useSelector","Button","useHistory","Item","fetch_store_items","set_list_to_be_updated","Search_Bar","makeStyles","Items","dispatch","styles","history","list_Name","state","homePage","name","username","login","profileObj","email","filtered_storeList","set_Filtered_storeList","list_toUpdate","items_to_be_updated","set_ItemsToBeUpdated","store_list","map","item","listId","userId","count","id","Math","random","toString","substr","isChecked","isStoreItem","items","set_items","handleAdd","push","error","console","log","goBack","text","fontFamily","fontWeight","length","add"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//Local imports\r\nimport Item from \"./Item/Item\";\r\nimport { fetch_store_items } from \"../../actions/actions\";\r\nimport { set_list_to_be_updated } from \"../../actions/actions\";\r\nimport Search_Bar from \"./Search_Bar/Search_Bar\";\r\nimport makeStyles from \"./Items_styles\";\r\n\r\nconst Items = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst styles = makeStyles();\r\n\tconst history = useHistory();\r\n\tconst list_Name = useSelector((state) => state.homePage.name); //NAME OF THE LIST THAT WE ARE GOING TO ADD ITEMS\r\n\tconst username = useSelector((state) => state.login.profileObj.email);\r\n\tconst [filtered_storeList, set_Filtered_storeList] = useState([]); //filetered items\r\n\t//LIST TO BE UPDATED\r\n\tconst [items_to_be_updated, set_ItemsToBeUpdated] = useState(\r\n\t\tuseSelector((state) => state.list_toUpdate)\r\n\t);\r\n\t//STORE ITEMS\r\n\tconst [items, set_items] = useState(\r\n\t\tuseSelector((state) =>\r\n\t\t\tstate.store_list.map((item) => {\r\n\t\t\t\titem.listId = list_Name;\r\n\t\t\t\titem.userId = username;\r\n\t\t\t\titem.count = 1;\r\n\t\t\t\titem.id = Math.random().toString(36).substr(2, 9);\r\n\t\t\t\titem.isChecked = false;\r\n\t\t\t\titem.isStoreItem = true;\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n\r\n\t// IF CHECKED ADD THE ITEMS TO THE LIST TO BE UPDATED\r\n\tconst handleAdd = () => {\r\n\t\titems.map((item) => {\r\n\t\t\tif (item.isChecked === true) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\titem.isChecked = false;\r\n\t\t\t\t\titems_to_be_updated.push(item); //push returns the new index of the array\r\n\t\t\t\t\tset_ItemsToBeUpdated(items_to_be_updated);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t//console.log(`ITMES TO BE ADDED: ${JSON.stringify(items)}`);\r\n\t\thistory.goBack();\r\n\t\tdispatch(set_list_to_be_updated(items_to_be_updated));\r\n\t};\r\n\t//====================================================\r\n\r\n\t//FETCH STORE ITEMS\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetch_store_items());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Search_Bar\r\n\t\t\t\titems={items}\r\n\t\t\t\tset_Filtered_storeList={set_Filtered_storeList}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.text}>\r\n\t\t\t\t<Typography style={{ fontFamily: \"Inter\", fontWeight: \"600\" }}>\r\n\t\t\t\t\tAdding Items to {list_Name}\r\n\t\t\t\t</Typography>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{filtered_storeList.length === 0\r\n\t\t\t\t\t? items.map((item) => (\r\n\t\t\t\t\t\t\t<Item\r\n\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\titems={items}\r\n\t\t\t\t\t\t\t\tset_items={set_items}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: filtered_storeList.map((item) => (\r\n\t\t\t\t\t\t\t<Item\r\n\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\titems={items}\r\n\t\t\t\t\t\t\t\tset_items={set_items}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t  ))}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button className={styles.add} onClick={handleAdd}>\r\n\t\t\t\t\tAdd Items\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Items;\r\n"]},"metadata":{},"sourceType":"module"}