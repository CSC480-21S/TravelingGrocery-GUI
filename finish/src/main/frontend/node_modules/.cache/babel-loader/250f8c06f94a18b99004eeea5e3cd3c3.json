{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\HomePage\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\n//Libraries\nimport { React, useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; //Styles\n\nimport makeStyles from '../../styles/HomePage'; //Components\n\nimport CreateList from './CreateList';\nimport { sendList } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const styles = makeStyles();\n  const history = useHistory();\n  const [userName, setUsername] = useState(\"Justin\");\n  const [open, setOpen] = useState(false);\n  const lists = useSelector(state => state.createList); // gets the lists from server\n\n  const profile = useSelector(state => state.login); //gets profile info from Google login\n\n  console.log('Profile from HomePage:' + profile); //console.log(\"From HomePage: \" + lists)\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleList = list => {\n    dispatch(sendList(list));\n    history.push('/User/Lists/listName');\n  }; //Load Profile information from localstorage\n\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"profile\");\n\n    if (data) {\n      setUsername(JSON.parse(data));\n    } else {\n      setUsername(profile.profileObj.name);\n    }\n  }, []); //Stores the Profile information in localstorage\n\n  useEffect(() => {\n    localStorage.setItem(\"profile\", JSON.stringify(profile));\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: styles.superContainer,\n    direction: \"column\",\n    spacing: 4,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: styles.test,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.userName,\n        children: [\"Hi \", userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [lists.map(list => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.regularButton,\n            onClick: () => handleList(list),\n            children: list.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n            className: styles.iconButton,\n            onClick: handleClickOpen,\n            children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CreateList, {\n            open: open,\n            onClose: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: styles.test,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.sharedList,\n        children: \"Shared List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.regularButton,\n            children: \"Shared List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: styles.iconButton,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"Ml65GLxRzMl34hpb7B4hOUsDtRs=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/HomePage/HomePage.js"],"names":["React","useState","useEffect","Typography","Button","AddIcon","IconButton","Grid","useSelector","useHistory","useDispatch","makeStyles","CreateList","sendList","HomePage","dispatch","styles","history","userName","setUsername","open","setOpen","lists","state","createList","profile","login","console","log","handleClickOpen","handleClose","handleList","list","push","data","localStorage","getItem","JSON","parse","profileObj","name","setItem","stringify","superContainer","test","map","regularButton","iconButton","sharedList"],"mappings":"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","sourcesContent":["//Libraries\r\nimport { React, useState, useEffect } from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\n//Styles\r\nimport makeStyles from '../../styles/HomePage'\r\n//Components\r\nimport CreateList from './CreateList'\r\nimport {sendList} from '../../actions/actions'\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n    const dispatch = useDispatch()\r\n    const styles = makeStyles()\r\n    const history = useHistory()\r\n    const [userName, setUsername] = useState(\"Justin\")\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const lists = useSelector((state) => state.createList)  // gets the lists from server\r\n    const profile = useSelector((state) => state.login) //gets profile info from Google login\r\n    console.log('Profile from HomePage:' + profile)\r\n    //console.log(\"From HomePage: \" + lists)\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const handleList = (list) => {\r\n        dispatch(sendList(list))\r\n        history.push('/User/Lists/listName')\r\n    }\r\n    //Load Profile information from localstorage\r\n    useEffect(() => {\r\n        const data = localStorage.getItem(\"profile\")\r\n        if(data){\r\n            setUsername(JSON.parse(data))\r\n        } else {\r\n            setUsername(profile.profileObj.name)\r\n        }\r\n    },[])\r\n    //Stores the Profile information in localstorage\r\n    useEffect(() =>{\r\n        localStorage.setItem(\"profile\", JSON.stringify(profile))\r\n    })\r\n\r\n    return (\r\n        <Grid container className={styles.superContainer} direction='column' spacing={4}>\r\n            {/* User Regular Lists */}\r\n            <Grid item className={styles.test}>\r\n                <Typography className={styles.userName}>Hi {userName}</Typography>\r\n                <Grid container spacing={2}>\r\n                    {lists.map((list) => (\r\n                        <Grid item>\r\n                            <Button className={styles.regularButton} onClick={()=>handleList(list)}>{list.name}</Button>\r\n                        </Grid>\r\n                    ))}\r\n                    <Grid item> {/* Add List Button */}\r\n                        <IconButton className={styles.iconButton} onClick={handleClickOpen}> {/*This is the PopUp menu*/}\r\n                            <AddIcon />\r\n                        </IconButton>\r\n                        <CreateList  open={open} onClose={handleClose} />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {/* Shared Item List */}\r\n            <Grid item className={styles.test}>\r\n                <Typography className={styles.sharedList}>Shared List</Typography>\r\n                <Grid container spacing={2}>\r\n                    <Grid item >\r\n                        <Button className={styles.regularButton}>Shared List</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton className={styles.iconButton}>\r\n                            <AddIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid><br />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}