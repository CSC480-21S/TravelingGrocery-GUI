{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\finish\\\\src\\\\main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\finish\\\\src\\\\main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import*as api from\"../api/api\";import*as TYPES from\"./actionTypes\";//DONT FORGET TO DISPATCH THE ACTION (REDUX)\n//Create a new List\nexport var create_List=function create_List(list,id){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _ref2,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.createList(list,id);case 3:_ref2=_context.sent;data=_ref2.data;//console.log(`data: ${data}`);\ndispatch({type:TYPES.CREATE,payload:data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}());};//Get all Lists\nexport var fetchLists=function fetchLists(id){return(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _ref4,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.getLists(id);case 3:_ref4=_context2.sent;data=_ref4.data;//console.log(\"FetchLists data: \" + data);\ndispatch({type:TYPES.FETCH_ALL,payload:data});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.message);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2){return _ref3.apply(this,arguments);};}());};//Send a List to a Component\nexport var sendList=function sendList(list){return function(dispatch){dispatch({type:TYPES.SEND_LIST,payload:list});};};//Send Google Info to a Component\nexport var send_Google_User_info=function send_Google_User_info(profile){return function(dispatch){dispatch({type:TYPES.SEND_GOOGLE_INFO,payload:profile});};};//Fetch items of a list\nexport var fecth_list_items=function fecth_list_items(user_id,list_id){return(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _ref6,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return api.fetch_items(user_id,list_id);case 3:_ref6=_context3.sent;data=_ref6.data;//console.log(`Items from Actions: ${JSON.stringify(data)}`);\ndispatch({type:TYPES.FETCH_LIST_ITEMS,payload:data});_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0.message);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function(_x3){return _ref5.apply(this,arguments);};}());};//Fetch Store items\nexport var fetch_store_items=function fetch_store_items(){return(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var _ref8,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return api.fetch_store_items();case 3:_ref8=_context4.sent;data=_ref8.data;//console.log(`Store Items from Actions: ${JSON.stringify(data)}`);\ndispatch({type:TYPES.FETCH_STORE_ITEMS,payload:data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0.message);case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,8]]);}));return function(_x4){return _ref7.apply(this,arguments);};}());};//Set Global Active List\nexport var set_active_list=function set_active_list(list){return function(dispatch){dispatch({type:TYPES.SET_ACTIVE_LIST,payload:list});};};//Set Global To be Updates List\nexport var set_list_to_be_updated=function set_list_to_be_updated(list){return function(dispatch){dispatch({type:TYPES.SET_LIST_TO_BE_UPDATED,payload:list});};};","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/finish/src/main/frontend/src/actions/actions.js"],"names":["api","TYPES","create_List","list","id","dispatch","createList","data","type","CREATE","payload","console","log","message","fetchLists","getLists","FETCH_ALL","sendList","SEND_LIST","send_Google_User_info","profile","SEND_GOOGLE_INFO","fecth_list_items","user_id","list_id","fetch_items","FETCH_LIST_ITEMS","fetch_store_items","FETCH_STORE_ITEMS","set_active_list","SET_ACTIVE_LIST","set_list_to_be_updated","SET_LIST_TO_BE_UPDATED"],"mappings":"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","sourcesContent":["import * as api from \"../api/api\";\r\nimport * as TYPES from \"./actionTypes\";\r\n\r\n//DONT FORGET TO DISPATCH THE ACTION (REDUX)\r\n\r\n//Create a new List\r\nexport const create_List = (list, id) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.createList(list, id);\r\n\t\t//console.log(`data: ${data}`);\r\n\t\tdispatch({ type: TYPES.CREATE, payload: data });\r\n\t} catch (error) {\r\n\t\tconsole.log(error.message);\r\n\t}\r\n};\r\n//Get all Lists\r\nexport const fetchLists = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.getLists(id);\r\n\t\t//console.log(\"FetchLists data: \" + data);\r\n\t\tdispatch({ type: TYPES.FETCH_ALL, payload: data });\r\n\t} catch (error) {\r\n\t\tconsole.log(error.message);\r\n\t}\r\n};\r\n//Send a List to a Component\r\nexport const sendList = (list) => (dispatch) => {\r\n\tdispatch({ type: TYPES.SEND_LIST, payload: list });\r\n};\r\n//Send Google Info to a Component\r\nexport const send_Google_User_info = (profile) => (dispatch) => {\r\n\tdispatch({ type: TYPES.SEND_GOOGLE_INFO, payload: profile });\r\n};\r\n//Fetch items of a list\r\nexport const fecth_list_items = (user_id, list_id) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.fetch_items(user_id, list_id);\r\n\t\t//console.log(`Items from Actions: ${JSON.stringify(data)}`);\r\n\t\tdispatch({ type: TYPES.FETCH_LIST_ITEMS, payload: data });\r\n\t} catch (error) {\r\n\t\tconsole.log(error.message);\r\n\t}\r\n};\r\n//Fetch Store items\r\nexport const fetch_store_items = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.fetch_store_items();\r\n\t\t//console.log(`Store Items from Actions: ${JSON.stringify(data)}`);\r\n\t\tdispatch({ type: TYPES.FETCH_STORE_ITEMS, payload: data });\r\n\t} catch (error) {\r\n\t\tconsole.log(error.message);\r\n\t}\r\n};\r\n//Set Global Active List\r\nexport const set_active_list = (list) => (dispatch) => {\r\n\tdispatch({ type: TYPES.SET_ACTIVE_LIST, payload: list });\r\n};\r\n//Set Global To be Updates List\r\nexport const set_list_to_be_updated = (list) => (dispatch) => {\r\n\tdispatch({ type: TYPES.SET_LIST_TO_BE_UPDATED, payload: list });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}