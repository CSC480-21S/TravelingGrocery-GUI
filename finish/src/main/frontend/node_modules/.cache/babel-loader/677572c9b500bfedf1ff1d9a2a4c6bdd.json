{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React_OpenLiberty\\\\guide-rest-client-reactjs\\\\finish\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Header\\\\Header.js\";\n//Libraries\nimport makeStyles from '../../styles/Header';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Typography } from '@material-ui/core'; //hooks\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { StaticRouter, useLocation } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux'; //Components or local imports\n\nimport test from '../../images/test.jpg';\nimport cat from '../../images/cat.png';\nimport Profile from './Profile';\n\nconst Header = () => {\n  const styles = makeStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const title = useSelector(state => state.homePage.name); //gets the name of the list clicked\n\n  const profile = useSelector(state => state.login); //gets profile info from Google login\n\n  const [open, setOpen] = useState(false); //Boolean that determines the state of Dialog/Profile component\n\n  const handleProfile = () => {\n    setOpen(true);\n  };\n\n  const handleProfileOnClose = () => {\n    setOpen(false);\n  };\n\n  const handleBack = () => {\n    if (location.pathname === '/User/Lists/listName') {\n      history.push('/home');\n    }\n  };\n\n  useEffect(() => {\n    console.log('From Header');\n  }, []); //Create a separate component for user's lists\n  //The name of the component as a prop to List\n  //Create a new element in the store that contains the name of the list\n  //Once you have the name you can access it from the header\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"     \", location.pathname === '/home' ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }) : React.createElement(IconButton, {\n    onClick: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ArrowBackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"     \", location.pathname === '/home' ? React.createElement(Typography, {\n    className: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Dashboard\") : location.pathname === '/User/Lists/listName' ? React.createElement(Typography, {\n    className: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, title) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"     \", React.createElement(IconButton, {\n    className: styles.item_login,\n    onClick: handleProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Test\",\n    src: profile.profileObj.imageUrl,\n    variant: \"circular\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Profile, {\n    open: open,\n    onClose: handleProfileOnClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"    \", React.createElement(TextField, {\n    className: styles.search,\n    color: \"secondary\",\n    placeholder: 'Search Items',\n    InputProps: {\n      disableUnderline: true,\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))));\n};\n\nexport default Header;","map":{"version":3,"sources":["D:/Projects/React_OpenLiberty/guide-rest-client-reactjs/finish/src/main/frontend/src/components/Header/Header.js"],"names":["makeStyles","Grid","Avatar","Button","SearchIcon","TextField","ArrowBackIcon","InputAdornment","IconButton","Typography","React","useState","useEffect","StaticRouter","useLocation","useHistory","useSelector","test","cat","Profile","Header","styles","location","history","title","state","homePage","name","profile","login","open","setOpen","handleProfile","handleProfileOnClose","handleBack","pathname","push","console","log","root","main","item_login","profileObj","imageUrl","search","disableUnderline","startAdornment"],"mappings":"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","sourcesContent":["//Libraries\r\nimport makeStyles from '../../styles/Header'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { Typography } from '@material-ui/core'\r\n//hooks\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { StaticRouter, useLocation } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n//Components or local imports\r\nimport test from '../../images/test.jpg'\r\nimport cat from '../../images/cat.png'\r\nimport Profile from './Profile'\r\n\r\nconst Header = () => {\r\n\r\n    const styles = makeStyles()\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n\r\n    \r\n    const title = useSelector((state) => state.homePage.name) //gets the name of the list clicked\r\n    const profile = useSelector((state) => state.login) //gets profile info from Google login\r\n\r\n    const [open, setOpen] = useState(false) //Boolean that determines the state of Dialog/Profile component\r\n    \r\n    const handleProfile = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleProfileOnClose = () =>{\r\n        setOpen(false)\r\n    }\r\n    const handleBack = () => {\r\n        if (location.pathname === '/User/Lists/listName') {\r\n            history.push('/home')\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        console.log('From Header')\r\n    },[])\r\n    //Create a separate component for user's lists\r\n    //The name of the component as a prop to List\r\n    //Create a new element in the store that contains the name of the list\r\n    //Once you have the name you can access it from the header\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3} className={styles.root}  >\r\n                <Grid item xs={2} >     {/* Back Button */}\r\n                    {location.pathname === '/home' ? <div></div> : <IconButton onClick={handleBack}><ArrowBackIcon /></IconButton>}\r\n                </Grid>\r\n                <Grid item xs={8} >     {/* title */}\r\n                    {\r\n                        location.pathname === '/home' ? <Typography className={styles.main}>Dashboard</Typography> :\r\n                        location.pathname === '/User/Lists/listName' ? <Typography className={styles.main}>{title}</Typography>:\r\n                        <div></div>\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={2} >     {/* Profile Picture */}\r\n                    <IconButton className={styles.item_login} onClick={handleProfile}><Avatar alt='Test' src={profile.profileObj.imageUrl} variant='circular' /></IconButton>\r\n                    <Profile open={open} onClose={handleProfileOnClose}/>\r\n                </Grid>\r\n                <Grid item xs={12} >    {/* Search Bar */}\r\n                    <TextField\r\n                        className={styles.search}\r\n                        color='secondary'\r\n                        placeholder={'Search Items'}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                            startAdornment: (\r\n                                <InputAdornment position='start'>\r\n                                    <SearchIcon />\r\n                                </InputAdornment >\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n"]},"metadata":{},"sourceType":"module"}