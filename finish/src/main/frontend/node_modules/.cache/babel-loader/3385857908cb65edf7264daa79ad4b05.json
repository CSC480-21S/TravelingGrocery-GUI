{"ast":null,"code":"import _slicedToArray from\"D:/Projects/CSC480/TravelingGrocery-GUI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{React,useEffect,useState}from'react';import{useGoogleLogin}from'react-google-login';import{GoogleLogin}from'react-google-login';import{useHistory}from'react-router-dom';import{useDispatch}from'react-redux';import Button from'@material-ui/core/Button';//Local components\nimport{send_Google_User_info}from'../../actions/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Login=function Login(_ref){var client_id=_ref.client_id;var dispatch=useDispatch();var history=useHistory();var _useState=useState(\"Empty\"),_useState2=_slicedToArray(_useState,2),test=_useState2[0],setTest=_useState2[1];//when Login works\nvar onSuccess=function onSuccess(response){console.log(\"Login Success: currentUser \".concat(response.profileObj));//console.log('Loaded: ' + loaded)\ndispatch(send_Google_User_info(response));setTest(response.profileObj.name);history.push('/home');};//When login is a failute\nvar onFailure=function onFailure(response){console.log('Error: '+response);};var _useGoogleLogin=useGoogleLogin({onSuccess:onSuccess,clientId:client_id,isSignedIn:true,onFailure:onFailure}),signIn=_useGoogleLogin.signIn,loaded=_useGoogleLogin.loaded;//=================================\nuseEffect(function(){console.log('From login');},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GoogleLogin,{clientId:client_id,buttonText:\"Login\",onSuccess:onSuccess,onFailure:onFailure,cookiePolicy:'single_host_origin',isSignedIn:true}),/*#__PURE__*/_jsxs(\"p\",{children:[\"THIS IS A TEST: \",test]})]});};export default Login;","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Login_SingOut/Login.js"],"names":["React","useEffect","useState","useGoogleLogin","GoogleLogin","useHistory","useDispatch","Button","send_Google_User_info","Login","client_id","dispatch","history","test","setTest","onSuccess","response","console","log","profileObj","name","push","onFailure","clientId","isSignedIn","signIn","loaded"],"mappings":"wKAAA,OAAQA,KAAR,CAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CAEA,OAASC,cAAT,KAA+B,oBAA/B,CACA,OAASC,WAAT,KAA2B,oBAA3B,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA;AACA,OAASC,qBAAT,KAAsC,uBAAtC,C,6IAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAiB,IAAfC,CAAAA,SAAe,MAAfA,SAAe,CAC3B,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAF2B,cAGHH,QAAQ,CAAC,OAAD,CAHL,wCAGpBW,IAHoB,eAGdC,OAHc,eAI3B;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,CAAc,CAC5BC,OAAO,CAACC,GAAR,sCAA0CF,QAAQ,CAACG,UAAnD,GACA;AACAR,QAAQ,CAACH,qBAAqB,CAACQ,QAAD,CAAtB,CAAR,CACAF,OAAO,CAACE,QAAQ,CAACG,UAAT,CAAoBC,IAArB,CAAP,CACAR,OAAO,CAACS,IAAR,CAAa,OAAb,EACH,CAND,CAOA;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACN,QAAD,CAAc,CAC5BC,OAAO,CAACC,GAAR,CAAY,UAAYF,QAAxB,EACH,CAFD,CAb2B,oBAiBAb,cAAc,CAAC,CACtCY,SAAS,CAAEA,SAD2B,CAEtCQ,QAAQ,CAAEb,SAF4B,CAGtCc,UAAU,CAAE,IAH0B,CAItCF,SAAS,CAAEA,SAJ2B,CAAD,CAjBd,CAiBnBG,MAjBmB,iBAiBnBA,MAjBmB,CAiBXC,MAjBW,iBAiBXA,MAjBW,CAuB3B;AAEAzB,SAAS,CAAC,UAAI,CACVgB,OAAO,CAACC,GAAR,CAAY,YAAZ,EACH,CAFQ,CAEP,EAFO,CAAT,CAIA,mBACI,wCACI,KAAC,WAAD,EACI,QAAQ,CAAER,SADd,CAEI,UAAU,CAAC,OAFf,CAGI,SAAS,CAAEK,SAHf,CAII,SAAS,CAAEO,SAJf,CAKI,YAAY,CAAE,oBALlB,CAMI,UAAU,CAAE,IANhB,EADJ,cAaC,wCAAoBT,IAApB,GAbD,GADJ,CAiBH,CA9CD,CAgDA,cAAeJ,CAAAA,KAAf","sourcesContent":["import {React, useEffect, useState} from 'react'\r\n\r\nimport { useGoogleLogin } from 'react-google-login'\r\nimport { GoogleLogin} from 'react-google-login'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\n//Local components\r\nimport { send_Google_User_info } from '../../actions/actions'\r\n\r\nconst Login = ({client_id}) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [test, setTest] = useState(\"Empty\")\r\n    //when Login works\r\n    const onSuccess = (response) => {\r\n        console.log(`Login Success: currentUser ${response.profileObj}`)\r\n        //console.log('Loaded: ' + loaded)\r\n        dispatch(send_Google_User_info(response))\r\n        setTest(response.profileObj.name)\r\n        history.push('/home')\r\n    }\r\n    //When login is a failute\r\n    const onFailure = (response) => {\r\n        console.log('Error: ' + response)\r\n    }\r\n\r\n    const { signIn, loaded } = useGoogleLogin({\r\n        onSuccess: onSuccess,\r\n        clientId: client_id,\r\n        isSignedIn: true,\r\n        onFailure: onFailure,\r\n    })\r\n    //=================================\r\n\r\n    useEffect(()=>{\r\n        console.log('From login')\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <GoogleLogin\r\n                clientId={client_id}\r\n                buttonText=\"Login\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n            />\r\n            {/* <Button onClick={signIn} className='login_button'>\r\n                Login\r\n            </Button>\r\n         */}\r\n         <p>THIS IS A TEST: {test}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}