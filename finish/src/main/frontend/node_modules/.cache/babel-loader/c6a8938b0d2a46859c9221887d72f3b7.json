{"ast":null,"code":"import _slicedToArray from\"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\finish\\\\src\\\\main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";//Regular imports\nimport React,{useState,useEffect,useRef}from\"react\";import Checkbox from\"@material-ui/core/Checkbox\";import{useDispatch}from\"react-redux\";//Actions\nimport{set_list_to_be_updated}from\"../../../../actions/actions\";//Components\nimport First_Section_List from\"./Sections/First/First_Section_List\";import Second_Section_List from\"./Sections/Second/Second_Section_List\";import Third_Section_List from\"./Sections/Third/Third_Section_List\";//Styles\nimport makeStyles from\"./item_styles\";var Item=function Item(_ref){var item=_ref.item,set_new_Item=_ref.set_new_Item,new_Items=_ref.new_Items;var styles=makeStyles();var dispatch=useDispatch();//Edit List Content\nvar _useState=useState(item.count),_useState2=_slicedToArray(_useState,2),item_count=_useState2[0],set_Item_count=_useState2[1];var _useState3=useState(item.isChecked),_useState4=_slicedToArray(_useState3,2),isChecked=_useState4[0],set_isChecked=_useState4[1];//Use ref does not build on re-renders\nvar isMounted=useRef(false);var isMounted2=useRef(false);//UPDATE CHECK OF CURENT ITEM\nuseEffect(function(){//Prevent rendering on mount\nif(isMounted.current){console.log(isChecked);new_Items.map(function(obj){if(obj.id===item.id){/* \t\t\t\t\tconsole.log(\"ISCHECKED: \" + isChecked);\r\n\t\t\t\t\tconsole.log(\"OBJ: \" + obj.isChecked); */obj.isChecked=isChecked;}});set_new_Item(new_Items);dispatch(set_list_to_be_updated(new_Items));console.log(\"New Items CHECK: \"+JSON.stringify(new_Items));}else{isMounted.current=true;}},[isChecked]);//UPDATE COUNT OF CURRENT ITEM\nuseEffect(function(){//Prevent rendering on mount\nif(isMounted2.current){//console.log(`COUNT: ${item_count}`);\nnew_Items.map(function(obj){if(obj.id===item.id){obj.count=item_count;}});set_new_Item(new_Items);dispatch(set_list_to_be_updated(new_Items));//console.log(\"New Items COUNT: \" + JSON.stringify(new_Items));\n}else{isMounted2.current=true;}},[item_count]);return React.createElement(\"div\",{style:{paddingLeft:20,paddingRight:20}},React.createElement(\"div\",{className:styles.container},React.createElement(\"div\",null,React.createElement(Checkbox,{checked:isChecked,onChange:function onChange(){return set_isChecked(!isChecked);},inputProps:{\"aria-label\":\"primary checkbox\"}})),React.createElement(\"div\",{className:styles.item_Image_Container},React.createElement(First_Section_List,null)),React.createElement(\"div\",{className:styles.item_details_Container},React.createElement(Second_Section_List,{item:item})),React.createElement(\"div\",{className:styles.third_section_list_Container},React.createElement(Third_Section_List,{item_count:item_count,set_Item_count:set_Item_count}))));};export default Item;","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/finish/src/main/frontend/src/components/Lists/Edit_List/List/Item.js"],"names":["React","useState","useEffect","useRef","Checkbox","useDispatch","set_list_to_be_updated","First_Section_List","Second_Section_List","Third_Section_List","makeStyles","Item","item","set_new_Item","new_Items","styles","dispatch","count","item_count","set_Item_count","isChecked","set_isChecked","isMounted","isMounted2","current","console","log","map","obj","id","JSON","stringify","paddingLeft","paddingRight","container","item_Image_Container","item_details_Container","third_section_list_Container"],"mappings":"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","sourcesContent":["//Regular imports\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useDispatch } from \"react-redux\";\r\n//Actions\r\nimport { set_list_to_be_updated } from \"../../../../actions/actions\";\r\n//Components\r\nimport First_Section_List from \"./Sections/First/First_Section_List\";\r\nimport Second_Section_List from \"./Sections/Second/Second_Section_List\";\r\nimport Third_Section_List from \"./Sections/Third/Third_Section_List\";\r\n\r\n//Styles\r\nimport makeStyles from \"./item_styles\";\r\n\r\nconst Item = ({ item, set_new_Item, new_Items }) => {\r\n\tconst styles = makeStyles();\r\n\tconst dispatch = useDispatch();\r\n\t//Edit List Content\r\n\tconst [item_count, set_Item_count] = useState(item.count);\r\n\tconst [isChecked, set_isChecked] = useState(item.isChecked);\r\n\t//Use ref does not build on re-renders\r\n\tconst isMounted = useRef(false);\r\n\tconst isMounted2 = useRef(false);\r\n\r\n\t//UPDATE CHECK OF CURENT ITEM\r\n\tuseEffect(() => {\r\n\t\t//Prevent rendering on mount\r\n\t\tif (isMounted.current) {\r\n\t\t\tconsole.log(isChecked);\r\n\t\t\tnew_Items.map((obj) => {\r\n\t\t\t\tif (obj.id === item.id) {\r\n\t\t\t\t\t/* \t\t\t\t\tconsole.log(\"ISCHECKED: \" + isChecked);\r\n\t\t\t\t\tconsole.log(\"OBJ: \" + obj.isChecked); */\r\n\t\t\t\t\tobj.isChecked = isChecked;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tset_new_Item(new_Items);\r\n\t\t\tdispatch(set_list_to_be_updated(new_Items));\r\n\t\t\tconsole.log(\"New Items CHECK: \" + JSON.stringify(new_Items));\r\n\t\t} else {\r\n\t\t\tisMounted.current = true;\r\n\t\t}\r\n\t}, [isChecked]);\r\n\r\n\t//UPDATE COUNT OF CURRENT ITEM\r\n\tuseEffect(() => {\r\n\t\t//Prevent rendering on mount\r\n\t\tif (isMounted2.current) {\r\n\t\t\t//console.log(`COUNT: ${item_count}`);\r\n\t\t\tnew_Items.map((obj) => {\r\n\t\t\t\tif (obj.id === item.id) {\r\n\t\t\t\t\tobj.count = item_count;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tset_new_Item(new_Items);\r\n\t\t\tdispatch(set_list_to_be_updated(new_Items));\r\n\t\t\t//console.log(\"New Items COUNT: \" + JSON.stringify(new_Items));\r\n\t\t} else {\r\n\t\t\tisMounted2.current = true;\r\n\t\t}\r\n\t}, [item_count]);\r\n\r\n\treturn (\r\n\t\t<div style={{ paddingLeft: 20, paddingRight: 20 }}>\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t{/* Item image */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tchecked={isChecked}\r\n\t\t\t\t\t\tonChange={() => set_isChecked(!isChecked)}\r\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.item_Image_Container}>\r\n\t\t\t\t\t<First_Section_List />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={styles.item_details_Container}>\r\n\t\t\t\t\t<Second_Section_List item={item} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.third_section_list_Container}>\r\n\t\t\t\t\t<Third_Section_List\r\n\t\t\t\t\t\titem_count={item_count}\r\n\t\t\t\t\t\tset_Item_count={set_Item_count}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Item;\r\n"]},"metadata":{},"sourceType":"module"}