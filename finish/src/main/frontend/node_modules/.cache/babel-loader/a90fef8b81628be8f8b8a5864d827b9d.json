{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/CSC480/TravelingGrocery-GUI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/CSC480/TravelingGrocery-GUI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as api from'../api/api';import{CREATE,FETCH_ALL,SEND_LIST,SEND_GOOGLE_INFO}from'./actionTypes';//Create a new List\nexport var create_List=function create_List(list){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$api$createList,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.createList(list);case 3:_yield$api$createList=_context.sent;data=_yield$api$createList.data;dispatch({type:CREATE,payload:data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//Get all Lists\nexport var fetchLists=function fetchLists(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$api$getLists,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.getLists(id);case 3:_yield$api$getLists=_context2.sent;data=_yield$api$getLists.data;console.log(data);dispatch({type:FETCH_ALL,payload:data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.message);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//Send a List to a Component\nexport var sendList=function sendList(list){return function(dispatch){try{dispatch({type:SEND_LIST,payload:list});}catch(error){console.log(error.message);}};};//Send Google Info to a Component\nexport var send_Google_User_info=function send_Google_User_info(profile){return function(dispatch){try{console.log('From Actions: '+profile);dispatch({type:SEND_GOOGLE_INFO,payload:profile});}catch(error){console.log(error);}};};","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/actions/actions.js"],"names":["api","CREATE","FETCH_ALL","SEND_LIST","SEND_GOOGLE_INFO","create_List","list","dispatch","createList","data","type","payload","console","log","message","fetchLists","id","getLists","sendList","error","send_Google_User_info","profile"],"mappings":"6UAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,YAArB,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,SAA5B,CAAuCC,gBAAvC,KAA+D,eAA/D,CAEA;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,iGAAU,iBAAOC,QAAP,uLAENP,CAAAA,GAAG,CAACQ,UAAJ,CAAeF,IAAf,CAFM,4CAErBG,IAFqB,uBAErBA,IAFqB,CAI7BF,QAAQ,CAAC,CAAEG,IAAI,CAAET,MAAR,CAAgBU,OAAO,CAAEF,IAAzB,CAAD,CAAR,CAJ6B,+EAM7BG,OAAO,CAACC,GAAR,CAAY,YAAMC,OAAlB,EAN6B,oEAAV,gEAApB,CASP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,kGAAQ,kBAAOT,QAAP,2LAEHP,CAAAA,GAAG,CAACiB,QAAJ,CAAaD,EAAb,CAFG,2CAElBP,IAFkB,qBAElBA,IAFkB,CAG1BG,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAEAF,QAAQ,CAAC,CAAEG,IAAI,CAAER,SAAR,CAAmBS,OAAO,CAAEF,IAA5B,CAAD,CAAR,CAL0B,mFAO1BG,OAAO,CAACC,GAAR,CAAY,aAAMC,OAAlB,EAP0B,sEAAR,kEAAnB,CAUP;AACA,MAAO,IAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACZ,IAAD,QAAU,UAACC,QAAD,CAAc,CAC5C,GAAG,CACCA,QAAQ,CAAC,CAACG,IAAI,CAAEP,SAAP,CAAkBQ,OAAO,CAAEL,IAA3B,CAAD,CAAR,CACH,OAAOa,KAAP,CAAc,CACXP,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACL,OAAlB,EACH,CACJ,CANuB,EAAjB,CAOP;AACA,MAAO,IAAMM,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,OAAD,QAAa,UAACd,QAAD,CAAc,CAC5D,GAAI,CACAK,OAAO,CAACC,GAAR,CAAY,iBAAmBQ,OAA/B,EACAd,QAAQ,CAAC,CAACG,IAAI,CAACN,gBAAN,CAAwBO,OAAO,CAAEU,OAAjC,CAAD,CAAR,CACH,CAAC,MAAOF,KAAP,CAAc,CACZP,OAAO,CAACC,GAAR,CAAYM,KAAZ,EACH,CACJ,CAPoC,EAA9B","sourcesContent":["import * as api from '../api/api'\r\nimport { CREATE, FETCH_ALL, SEND_LIST, SEND_GOOGLE_INFO } from './actionTypes'\r\n\r\n//Create a new List\r\nexport const create_List = (list) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createList(list)\r\n\r\n        dispatch({ type: CREATE, payload: data })\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n//Get all Lists\r\nexport const fetchLists = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getLists(id)\r\n        console.log(data)\r\n        \r\n        dispatch({ type: FETCH_ALL, payload: data })\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n//Send a List to a Component\r\nexport const sendList = (list) => (dispatch) => {\r\n    try{\r\n        dispatch({type: SEND_LIST, payload: list})\r\n    }catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n//Send Google Info to a Component\r\nexport const send_Google_User_info = (profile) => (dispatch) => {\r\n    try {\r\n        console.log('From Actions: ' + profile)\r\n        dispatch({type:SEND_GOOGLE_INFO, payload: profile})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}