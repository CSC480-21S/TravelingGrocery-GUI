{"ast":null,"code":"import _objectSpread from\"D:/Projects/CSC480/TravelingGrocery-GUI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/Projects/CSC480/TravelingGrocery-GUI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/CSC480/TravelingGrocery-GUI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Projects/CSC480/TravelingGrocery-GUI/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{React,useState}from'react';import Dialog from'@material-ui/core/Dialog';import TextField from'@material-ui/core/TextField';import Button from'@material-ui/core/Button';import CloseIcon from'@material-ui/icons/Close';import IconButton from'@material-ui/core/IconButton';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import FormControl from'@material-ui/core/FormControl';import{useDispatch}from'react-redux';import makeStyles from'../../styles/CreasteList';import{Typography}from'@material-ui/core';import{create_List}from'../../actions/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateList=function CreateList(props){var _useState=useState({name:' ',items:[]}),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var styles=makeStyles();var dispatch=useDispatch();var onClose=props.onClose,open=props.open;var handleClose=function handleClose(){clearInput();onClose();};var clearInput=function clearInput(){setList({name:' ',items:[]});};var createNewList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();dispatch(create_List(list));handleClose();case 3:case\"end\":return _context.stop();}}},_callee);}));return function createNewList(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Dialog,{onClose:handleClose,open:open,className:styles.main,children:[/*#__PURE__*/_jsx(DialogActions,{disableSpacing:true,children:/*#__PURE__*/_jsx(IconButton,{className:styles.exitIcon,size:\"small\",onClick:handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{})})}),/*#__PURE__*/_jsxs(DialogContent,{children:[\" \",/*#__PURE__*/_jsx(Typography,{className:styles.title,children:\" Create List \"})]}),/*#__PURE__*/_jsx(\"form\",{className:\"\".concat(styles.root,\" \").concat(styles.mainContainer),onSubmit:createNewList,children:/*#__PURE__*/_jsxs(FormControl,{className:styles.formControl,children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,className:styles.inputText,value:list.name,onChange:function onChange(e){return setList(_objectSpread(_objectSpread({},list),{},{name:e.target.value}));},placeholder:\"Enter Name\",InputProps:{disableUnderline:true}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:styles.submitButton,children:\"Create New List\"})]})}),/*#__PURE__*/_jsx(DialogActions,{})]})});};export default CreateList;","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/HomePage/CreateList.js"],"names":["React","useState","Dialog","TextField","Button","CloseIcon","IconButton","DialogActions","DialogContent","FormControl","useDispatch","makeStyles","Typography","create_List","CreateList","props","name","items","list","setList","styles","dispatch","onClose","open","handleClose","clearInput","createNewList","e","preventDefault","main","exitIcon","title","root","mainContainer","formControl","inputText","target","value","disableUnderline","submitButton"],"mappings":"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","sourcesContent":["import { React, useState } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport { useDispatch } from 'react-redux'\r\nimport makeStyles from '../../styles/CreasteList'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { create_List } from '../../actions/actions'\r\n\r\nconst CreateList = (props) => {\r\n    const [list, setList] = useState({ name: ' ', items: [] })\r\n    const styles = makeStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    const { onClose, open } = props\r\n\r\n    const handleClose = () => {\r\n        clearInput()\r\n        onClose()\r\n    }\r\n    const clearInput = () => {\r\n        setList({ name: ' ', items: [] })\r\n    }\r\n    const createNewList = async (e) => {\r\n        e.preventDefault()\r\n        dispatch(create_List(list))\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog onClose={handleClose} open={open} className={styles.main}>\r\n                <DialogActions disableSpacing>\r\n                    <IconButton className={styles.exitIcon} size=\"small\" onClick={handleClose}>\r\n                        <CloseIcon ></CloseIcon>\r\n                    </IconButton>\r\n                </DialogActions>\r\n                <DialogContent> <Typography className={styles.title}> Create List </Typography></DialogContent>\r\n                <form className={`${styles.root} ${styles.mainContainer}`} onSubmit={createNewList}>\r\n                    <FormControl className={styles.formControl}>\r\n                        <TextField \r\n                            fullWidth \r\n                            className={styles.inputText} \r\n                            value={list.name} \r\n                            onChange={(e) => setList({ ...list, name: e.target.value })}\r\n                            placeholder=\"Enter Name\"\r\n                            InputProps={{\r\n                                disableUnderline: true,\r\n                            }}\r\n                        ></TextField>\r\n                        <Button type='submit' className={styles.submitButton}>Create New List</Button>\r\n                    </FormControl>\r\n                </form>\r\n                <DialogActions></DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateList\r\n"]},"metadata":{},"sourceType":"module"}