{"version":3,"sources":["images/logo.png","components/Navbar.js","components/Dashboard.js","images/blank.png","images/out_of_stock.jpg","components/Navigation.js","components/OfflineNavigation.js","components/localhost/LocalHostNavigation.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","showLinks","setShowLinks","className","alt","src","logo","id","to","onClick","Dashboard","Navigation","directions","setDirections","index","setIndex","finished","setFinished","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","useEffect","a","axios","post","res","data","error","sendPostRequest","itemStockBool","img_blank","img_out_of_stock","itemName","department","aisle","rack","side","shelf","length","OfflineNavigation","parse","getItem","LocalHostNavigation","sendGetRequest","get","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5f41afd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7b9a40dc.png\";","import React, {useState} from 'react'\nimport '../App.css'\nimport ReorderIcon from '@material-ui/icons/Reorder'\nimport { Link } from 'react-router-dom';\n\nimport logo from '../images/logo.png'\n\nfunction Navbar() {\n    // Used for showing a button to access nav links when screen size small\n    const [showLinks, setShowLinks] = useState(false);\n    return ( \n        <div className=\"Navbar\"> \n            <div className=\"leftSide\">\n                <img className=\"logo\" alt=\"Logo\" src={logo} />\n            </div>\n            <div className=\"rightSide\" id={showLinks ? \"hidden\" : \"\"}>\n                {/* If showLinks is true, set id to \"hidden\" else set to \"\" */}\n                <div className=\"links\" id={showLinks ? \"hidden\" : \"\"}>\n                    <Link to=\"/dashboard\" onClick={()=> setShowLinks(!showLinks)}>Dashboard</Link>\n                    <Link to=\"/developer\" onClick={()=> setShowLinks(!showLinks)}>Developer</Link>\n\t\t\t\t\t{/* NOTE: Put a link to your component here */}\n                </div>\n                <button onClick={()=> setShowLinks(!showLinks)}> <ReorderIcon /> </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar\n","import React from 'react';\nimport '../App.css'\n\nconst Dashboard = () => {\n    return (\n        <div>\n            <h1>Dashboard component</h1>\n        </div>\n    );\n}\n\nexport default Dashboard","export default __webpack_public_path__ + \"static/media/blank.95a037a4.png\";","export default __webpack_public_path__ + \"static/media/out_of_stock.d2f33b6f.jpg\";","import axios from \"axios\";\nimport React, {useState, useEffect} from \"react\";\nimport img_blank from '../images/blank.png';\nimport img_out_of_stock from '../images/out_of_stock.jpg';\n\nconst SERVER_URL = 'http://pi.cs.oswego.edu:9081/store/nav'\n\nconst Navigation = () => {\n    // I have to set a default placeholder state until the get request finishes?\n    // TODO:  This is a weird fix, Find a better way?\n    const [directions, setDirections] = useState([\n        {\n            \"shoppingListID\": 1,\n\t\t\t\"itemName\": \"Request or response likely had an error, check consolelog\",\n\t\t\t\"aisle\": 0,\n\t\t\t\"rack\": 0,\n\t\t\t\"shelf\": \"placeholder\",\n\t\t\t\"side\": \"placeholder\",\n\t\t\t\"department\": \"placeholder\",\n\t\t\t\"itemQuantity\": 1,\n\t\t\t\"itemStockBool\": true\n        }\n    ])\n    const [index, setIndex] = useState(0)\n    const [finished, setFinished] = useState(false)\n\n    function saveToLocalStorage(state) {\n        try {\n            const serializedState = JSON.stringify(state)\n            localStorage.setItem('directions', serializedState)\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n        const sendPostRequest = async () => {\n            try {\n                const res = await axios.post(SERVER_URL, { \n                    \"lists\": \n                    [ \n                        { \n                            \"shoppingListID\": 5, \n                            \"itemNameArray\": [\"turkey jerky\", \"grape juice\", \"ranch\", \"spices\", \"pita bread\"], \n                            \"itemQuantityArray\": [3, 3, 6, 6, 6]\n                        }\n                    ] \n                });\n                setDirections(res.data)\n                saveToLocalStorage(res.data)\n            } catch (err) {\n                // Handle Error Here\n                console.error(err);\n            }\n        };\n        sendPostRequest();\n    }, [])\n\n    const increment = () => {\n        if (index !== directions.length -1) {\n            setIndex(index+1)\n        }\n        else {\n            setFinished(true)\n            //console.log(\"You attempted to increment out of bounds\")\n        }\n    }\n\n    const decrement = () => {\n        if (index !== 0) {\n            setFinished(false)\n            setIndex(index-1)\n        }\n        else {\n            //console.log(\"You attempted to decrement out of bounds\")\n        }\n    }\n\n    return (\n        <div className = 'global'>\n            <div className = 'containerTop'>\n                Navigation\n            </div>\n\n            <div className ='containerDirections'>\n                {/* Conditonal statement bool ? ifTrue : ifFalse */}\n                {\n                    directions[index].itemStockBool ? \n                    <img className= 'itemImage' src={img_blank} alt=\"itemImage\" /> \n                    : <img className= 'itemImage' src={img_out_of_stock} alt=\"itemImage\" />\n                }\n                \n                <p className='hugLeft'> {directions[index].itemName} </p>\n                <p className='hugLeft'> {directions[index].department} Department </p>\n                <p className='hugLeft'> Aisle {directions[index].aisle} </p>\n                <p className='hugLeft'> Rack {directions[index].rack} | {directions[index].side} side | {directions[index].shelf} shelf </p>\n            </div>\n\n            <div className ='containerStatus'>\n                {\n                    directions[index].itemStockBool ? '' :\n                    <button className = 'outOfStockButton'>Move item</button>\n                }\n                <br></br>\n                {index+1}/{directions.length} {finished ? 'Finished!' : ''}\n            </div>\n\n            <div className = 'containerBackNext'>\n                <button className = 'backButton' onClick={() => decrement()}>Back</button>\n                <button className = 'nextButton' onClick={() => increment()}>Next</button>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Navigation","import React, {useState } from \"react\";\r\nimport img_blank from '../images/blank.png';\r\nimport img_out_of_stock from '../images/out_of_stock.jpg';\r\n\r\nconst OfflineNavigation = () => {\r\n    const directions = JSON.parse(localStorage.getItem('directions'));\r\n    const [index, setIndex] = useState(0)\r\n    const [finished, setFinished] = useState(false)\r\n   \r\n    const increment = () => {\r\n        if (index !== directions.length -1) {\r\n            setIndex(index+1)\r\n        }\r\n        else {\r\n            setFinished(true)\r\n            //console.log(\"You attempted to increment out of bounds\")\r\n        }\r\n    }\r\n\r\n    const decrement = () => {\r\n        if (index !== 0) {\r\n            setFinished(false)\r\n            setIndex(index-1)\r\n        }\r\n        else {\r\n            //console.log(\"You attempted to decrement out of bounds\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = 'global'>\r\n            <div className = 'containerTop'>\r\n                Navigation\r\n            </div>\r\n\r\n            <div className ='containerDirections'>\r\n                {/* Conditonal statement bool ? ifTrue : ifFalse */}\r\n                {\r\n                    directions[index].itemStockBool ? \r\n                    <img className= 'itemImage' src={img_blank} alt=\"itemImage\" /> \r\n                    : <img className= 'itemImage' src={img_out_of_stock} alt=\"itemImage\" />\r\n                }\r\n                \r\n                <p className='hugLeft'> {directions[index].itemName} </p>\r\n                <p className='hugLeft'> {directions[index].department} Department </p>\r\n                <p className='hugLeft'> Aisle {directions[index].aisle} </p>\r\n                <p className='hugLeft'> Rack {directions[index].rack} | {directions[index].side} side | {directions[index].shelf} shelf </p>\r\n            </div>\r\n\r\n            <div className ='containerStatus'>\r\n                {\r\n                    directions[index].itemStockBool ? '' :\r\n                    <button className = 'outOfStockButton'>Move item</button>\r\n                }\r\n                <br></br>\r\n                {index+1}/{directions.length} {finished ? 'Finished!' : ''}\r\n            </div>\r\n\r\n            <div className = 'containerBackNext'>\r\n                <button className = 'backButton' onClick={() => decrement()}>Back</button>\r\n                <button className = 'nextButton' onClick={() => increment()}>Next</button>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default OfflineNavigation","import axios from \"axios\";\nimport '../Navigation.css'\nimport React, {useState, useEffect} from \"react\";\nimport img_blank from '../../images/blank.png';\nimport img_out_of_stock from '../../images/out_of_stock.jpg';\n\nconst LOCAL_URL = 'http://localhost:8000/directions'\n\nfunction saveToLocalStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('directions', serializedState)\n    } catch(e) {\n        console.log(e)\n    }\n}\n\nconst LocalHostNavigation = () => {\n    // I have to set a default placeholder state until the get request finishes?\n    // TODO:  This is a weird fix, Find a better way?\n    const [directions, setDirections] = useState([\n        {\n            \"shoppingListID\": 1,\n\t\t\t\"itemName\": \"Request or response likely had an error, check consolelog\",\n\t\t\t\"aisle\": 0,\n\t\t\t\"rack\": 0,\n\t\t\t\"shelf\": \"placeholder\",\n\t\t\t\"side\": \"placeholder\",\n\t\t\t\"department\": \"placeholder\",\n\t\t\t\"itemQuantity\": 1,\n\t\t\t\"itemStockBool\": true\n        }\n    ])\n    const [index, setIndex] = useState(0)\n    const [finished, setFinished] = useState(false)\n\n    const sendGetRequest = async () => {\n        try {\n            const res = await axios.get(LOCAL_URL);\n            setDirections(res.data)\n            saveToLocalStorage(res.data)\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    };    \n\n    // Upon page load\n    useEffect(() => {\n        sendGetRequest();\n    }, [])\n\n    const increment = () => {\n        if (index !== directions.length -1) {\n            setIndex(index+1)\n        }\n        else {\n            setFinished(true)\n            //console.log(\"You attempted to increment out of bounds\")\n        }\n    }\n\n    const decrement = () => {\n        if (index !== 0) {\n            setFinished(false)\n            setIndex(index-1)\n        }\n        else {\n            //console.log(\"You attempted to decrement out of bounds\")\n        }\n    }\n\n    return (\n        <div className = 'global'>\n            <div className = 'containerTop'>\n                Navigation\n            </div>\n\n            <div className ='containerDirections'>\n                {/* Conditonal statement bool ? ifTrue : ifFalse */}\n                {\n                    directions[index].itemStockBool ? \n                    <img className= 'itemImage' src={img_blank} alt=\"itemImage\" /> \n                    : <img className= 'itemImage' src={img_out_of_stock} alt=\"itemImage\" />\n                }\n                \n                <p className='hugLeft'> {directions[index].itemName} </p>\n                <p className='hugLeft'> {directions[index].department} Department </p>\n                <p className='hugLeft'> Aisle {directions[index].aisle} </p>\n                <p className='hugLeft'> Rack {directions[index].rack} | {directions[index].side} side | {directions[index].shelf} shelf </p>\n            </div>\n\n            <div className ='containerStatus'>\n                {\n                    directions[index].itemStockBool ? '' :\n                    <button className = 'outOfStockButton'>Move item</button>\n                }\n                <br></br>\n                {index+1}/{directions.length} {finished ? 'Finished!' : ''}\n            </div>\n\n            <div className = 'containerBackNext'>\n                <button className = 'backButton' onClick={() => decrement()}>Back</button>\n                <button className = 'nextButton' onClick={() => increment()}>Next</button>\n            </div>\n        </div>\n    );\n}\n\nexport default LocalHostNavigation","import './App.css';\nimport Navbar from \"./components/Navbar\"\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport Dashboard from './components/Dashboard';\nimport Navigation from './components/Navigation';\nimport OfflineNavigation from './components/OfflineNavigation';\nimport LocalHostNavigation from './components/localhost/LocalHostNavigation';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<h3>Exact path contains nothing rn go to dashboard pls</h3>\n\t\t\t\t\t\t<Link to=\"/dashboard\"><p>Dashboard component</p></Link>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/dashboard\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<Dashboard />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/developer\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<Link to=\"/localhost_navigation\"><p>Local Host Navigation component</p></Link>\n\t\t\t\t\t\t<Link to=\"/navigation\"><p>Pi Navigation component</p></Link>\n\t\t\t\t\t\t<Link to=\"/offline_navigation\"><p>Offline Navigation component (Purely looks at LocalStorage)</p></Link>\n\t\t\t\t\t\t{/* NOTE: Put a link to your component here */}\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/localhost_navigation\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<LocalHostNavigation />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/navigation\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/offline_navigation\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<OfflineNavigation />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}