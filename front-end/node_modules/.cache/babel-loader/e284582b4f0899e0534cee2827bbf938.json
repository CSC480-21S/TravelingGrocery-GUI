{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Items\\\\Items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch, useSelector } from \"react-redux\"; //Local imports\n\nimport Item from \"./Item/Item\";\nimport { fetch_store_items } from \"../../actions/actions\";\nimport { set_list_to_be_updated } from \"../../actions/actions\";\nimport Search_Bar from \"./Search_Bar/Search_Bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Items = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const list_Name = useSelector(state => state.homePage.name); //NAME OF THE LIST THAT WE ARE GOING TO ADD ITEMS\n  //STORE ITEMS\n\n  const [items, set_items] = useState(useSelector(state => state.store_list.map(item => {\n    item.isChecked = false;\n    return item;\n  }))); //LIST TO BE UPDATED\n\n  const [items_to_be_updated, set_ItemsToBeUpdated] = useState(useSelector(state => state.list_toUpdate));\n  console.log(\"STORE ITEMS: \" + JSON.stringify(items)); // IF CHECKED ADD THE ITEMS TO THE LIST TO BE UPDATED\n\n  const handleAdd = () => {\n    const temp = items.filter(item => item.isChecked === true);\n    console.log(\"TEMP: \" + JSON.stringify(temp));\n    set_ItemsToBeUpdated(...items_to_be_updated, temp);\n    dispatch(set_list_to_be_updated(items_to_be_updated));\n  }; //====================================================\n\n\n  useEffect(() => {\n    dispatch(fetch_store_items());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search_Bar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Adding Items to \", list_Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item,\n        items: items,\n        set_items: set_items\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"ADD ITEMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Items, \"DKk7PXAIJbzFxI042NvrLMMATHM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Items/Items.js"],"names":["React","useEffect","useState","Typography","useDispatch","useSelector","Item","fetch_store_items","set_list_to_be_updated","Search_Bar","Items","dispatch","list_Name","state","homePage","name","items","set_items","store_list","map","item","isChecked","items_to_be_updated","set_ItemsToBeUpdated","list_toUpdate","console","log","JSON","stringify","handleAdd","temp","filter","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,sBAAT,QAAuC,uBAAvC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,SAAS,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,IAA3B,CAA7B,CAFmB,CAE4C;AAC/D;;AACA,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBf,QAAQ,CAClCG,WAAW,CAAEQ,KAAD,IACXA,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AAC9BA,IAAAA,IAAI,CAACC,SAAL,GAAiB,KAAjB;AACA,WAAOD,IAAP;AACA,GAHD,CADU,CADuB,CAAnC,CAJmB,CAYnB;;AACA,QAAM,CAACE,mBAAD,EAAsBC,oBAAtB,IAA8CrB,QAAQ,CAC3DG,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACW,aAAlB,CADgD,CAA5D;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBC,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAA9B,EAhBmB,CAkBnB;;AACA,QAAMa,SAAS,GAAG,MAAM;AACvB,UAAMC,IAAI,GAAGd,KAAK,CAACe,MAAN,CAAcX,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,IAA1C,CAAb;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWC,IAAI,CAACC,SAAL,CAAeE,IAAf,CAAvB;AACAP,IAAAA,oBAAoB,CAAC,GAAGD,mBAAJ,EAAyBQ,IAAzB,CAApB;AACAnB,IAAAA,QAAQ,CAACH,sBAAsB,CAACc,mBAAD,CAAvB,CAAR;AACA,GALD,CAnBmB,CAyBnB;;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR;AACA,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA,sBACC;AAAA,4BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,6BACC,QAAC,UAAD;AAAA,uCAA6BC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AAAA,gBACEI,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACV,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,KAAK,EAAEJ,KAAvC;AAA8C,QAAA,SAAS,EAAEC;AAAzD,SAAWG,IAAI,CAACY,EAAhB;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YALD,eAUC;AAAA,6BACC;AAAQ,QAAA,OAAO,EAAEH,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CA9CD;;GAAMnB,K;UACYN,W,EACCC,W,EAGjBA,W,EASAA,W;;;KAdIK,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//Local imports\r\nimport Item from \"./Item/Item\";\r\nimport { fetch_store_items } from \"../../actions/actions\";\r\nimport { set_list_to_be_updated } from \"../../actions/actions\";\r\nimport Search_Bar from \"./Search_Bar/Search_Bar\";\r\n\r\nconst Items = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst list_Name = useSelector((state) => state.homePage.name); //NAME OF THE LIST THAT WE ARE GOING TO ADD ITEMS\r\n\t//STORE ITEMS\r\n\tconst [items, set_items] = useState(\r\n\t\tuseSelector((state) =>\r\n\t\t\tstate.store_list.map((item) => {\r\n\t\t\t\titem.isChecked = false;\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n\t//LIST TO BE UPDATED\r\n\tconst [items_to_be_updated, set_ItemsToBeUpdated] = useState(\r\n\t\tuseSelector((state) => state.list_toUpdate)\r\n\t);\r\n\tconsole.log(\"STORE ITEMS: \" + JSON.stringify(items));\r\n\r\n\t// IF CHECKED ADD THE ITEMS TO THE LIST TO BE UPDATED\r\n\tconst handleAdd = () => {\r\n\t\tconst temp = items.filter((item) => item.isChecked === true);\r\n\t\tconsole.log(\"TEMP: \" + JSON.stringify(temp));\r\n\t\tset_ItemsToBeUpdated(...items_to_be_updated, temp);\r\n\t\tdispatch(set_list_to_be_updated(items_to_be_updated));\r\n\t};\r\n\t//====================================================\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetch_store_items());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Search_Bar />\r\n\t\t\t<div>\r\n\t\t\t\t<Typography>Adding Items to {list_Name}</Typography>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t<Item key={item.id} item={item} items={items} set_items={set_items} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={handleAdd}>ADD ITEMS</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Items;\r\n"]},"metadata":{},"sourceType":"module"}