{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Lists\\\\Edit_List\\\\Edit_List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { set_list_toUpdate } from \"../../../actions/actions\"; //Local imports\n\nimport Add_Item from \"./Add_Item/Add_item\";\nimport Confirm from \"./Confirm/Confirm\";\nimport Item from \"./List/Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit_List = () => {\n  _s();\n\n  //ADD CHECK MARK BOOLEAN TO A NEW LIST OBJECT\n  const [new_Items, set_new_Item] = useState(useSelector(state => state.lists.map(item => {\n    item.isChecked = false;\n    return item;\n  }))); //REMOVE ITEMS FROM THE LIST IF CHECK MARK BOOLEAN IS TRUE\n\n  const handleDelete = () => {\n    set_new_Item(new_Items.filter(item => item.isChecked === false));\n  }; //UPTADE LIST OF ITEMS EVERYTIME THE LIST CHANGES\n\n\n  useEffect(() => {\n    console.log(\"FROM EDIT LISTS: \" + JSON.stringify(new_Items));\n    set_list_toUpdate(new_Items);\n  }, [new_Items]);\n  useEffect(() => {\n    console.log(\"TESTING NEW ACTION\");\n    set_list_toUpdate(new_Items);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Add_Item, {\n        set_new_Item: set_new_Item,\n        new_Items: new_Items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: new_Items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item,\n        set_new_Item: set_new_Item,\n        new_Items: new_Items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Confirm, {\n        set_new_Item: set_new_Item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Edit_List, \"JDXDqOE+dN5e/odImtZ35XmMJu8=\", false, function () {\n  return [useSelector];\n});\n\n_c = Edit_List;\nexport default Edit_List;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit_List\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Lists/Edit_List/Edit_List.js"],"names":["React","useEffect","useState","useSelector","set_list_toUpdate","Add_Item","Confirm","Item","Edit_List","new_Items","set_new_Item","state","lists","map","item","isChecked","handleDelete","filter","console","log","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,0BAAlC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CACzCC,WAAW,CAAEQ,KAAD,IACXA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACzBA,IAAAA,IAAI,CAACC,SAAL,GAAiB,KAAjB;AACA,WAAOD,IAAP;AACA,GAHD,CADU,CAD8B,CAA1C,CAFuB,CAUvB;;AACA,QAAME,YAAY,GAAG,MAAM;AAC1BN,IAAAA,YAAY,CAACD,SAAS,CAACQ,MAAV,CAAkBH,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,KAA9C,CAAD,CAAZ;AACA,GAFD,CAXuB,CAevB;;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACfiB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,IAAI,CAACC,SAAL,CAAeZ,SAAf,CAAlC;AACAL,IAAAA,iBAAiB,CAACK,SAAD,CAAjB;AACA,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACfiB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAf,IAAAA,iBAAiB,CAACK,SAAD,CAAjB;AACA,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACC;AAAA,4BACC;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEC,YAAxB;AAAsC,QAAA,SAAS,EAAED;AAAjD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AAAA,gBACEA,SAAS,CAACI,GAAV,CAAeC,IAAD,iBACd,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,YAAY,EAAEJ,YAAhC;AAA8C,QAAA,SAAS,EAAED;AAAzD;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAJD,eASC;AAAA,6BACC;AAAQ,QAAA,OAAO,EAAEO,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YATD,eAYC;AAAA,6BACC,QAAC,OAAD;AAAS,QAAA,YAAY,EAAEN;AAAvB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAZD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CA3CD;;GAAMF,S;UAGJL,W;;;KAHIK,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { set_list_toUpdate } from \"../../../actions/actions\";\r\n//Local imports\r\nimport Add_Item from \"./Add_Item/Add_item\";\r\nimport Confirm from \"./Confirm/Confirm\";\r\nimport Item from \"./List/Item\";\r\n\r\nconst Edit_List = () => {\r\n\t//ADD CHECK MARK BOOLEAN TO A NEW LIST OBJECT\r\n\tconst [new_Items, set_new_Item] = useState(\r\n\t\tuseSelector((state) =>\r\n\t\t\tstate.lists.map((item) => {\r\n\t\t\t\titem.isChecked = false;\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n\t//REMOVE ITEMS FROM THE LIST IF CHECK MARK BOOLEAN IS TRUE\r\n\tconst handleDelete = () => {\r\n\t\tset_new_Item(new_Items.filter((item) => item.isChecked === false));\r\n\t};\r\n\r\n\t//UPTADE LIST OF ITEMS EVERYTIME THE LIST CHANGES\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"FROM EDIT LISTS: \" + JSON.stringify(new_Items));\r\n\t\tset_list_toUpdate(new_Items);\r\n\t}, [new_Items]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"TESTING NEW ACTION\");\r\n\t\tset_list_toUpdate(new_Items);\r\n\t}, []);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<Add_Item set_new_Item={set_new_Item} new_Items={new_Items} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{new_Items.map((item) => (\r\n\t\t\t\t\t<Item item={item} set_new_Item={set_new_Item} new_Items={new_Items} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={handleDelete}>Delete</button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Confirm set_new_Item={set_new_Item} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Edit_List;\r\n"]},"metadata":{},"sourceType":"module"}