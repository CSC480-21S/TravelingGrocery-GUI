{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Lists\\\\Edit_List\\\\List\\\\Item.js\",\n    _s = $RefreshSig$();\n\n//Regular imports\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Checkbox from \"@material-ui/core/Checkbox\"; //Actions\n//Components\n\nimport First_Section_List from \"./Sections/First/First_Section_List\";\nimport Second_Section_List from \"./Sections/Second/Second_Section_List\";\nimport Third_Section_List from \"./Sections/Third/Third_Section_List\"; //Styles\n\nimport makeStyles from \"./item_styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  item,\n  set_new_Item,\n  items\n}) => {\n  _s();\n\n  const styles = makeStyles();\n  const [isChecked, set_isChecked] = useState(item.isChecked); //Edit List Content\n\n  const [item_count, set_Item_count] = useState(item.count); //===============================================\n\n  console.log(`items: ${JSON.stringify(items)}`);\n  console.log(`item  : ${JSON.stringify(item)}`);\n  /* console.log(\"FOUND: \" + typeof items);\r\n  console.log(\r\n  \t\"FOUND: \" + JSON.stringify(items.find((obj) => obj.id === item.id))\r\n  ); */\n\n  const handleCheck = () => {\n    set_isChecked(!isChecked);\n    items.map(obj => {\n      if (obj.id === item.id) {\n        obj.isChecked = isChecked;\n      }\n    });\n    set_new_Item(items);\n    console.log(JSON.stringify(items));\n  }; //===============================================\n\n\n  useEffect(() => {//console.log(JSON.stringify(item));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: 50,\n      paddingRight: 50\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: styles.container,\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: isChecked,\n          onChange: handleCheck,\n          inputProps: {\n            \"aria-label\": \"primary checkbox\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        className: styles.item_Image_Container,\n        children: /*#__PURE__*/_jsxDEV(First_Section_List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        className: styles.item_details_Container,\n        children: /*#__PURE__*/_jsxDEV(Second_Section_List, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        className: styles.third_section_list_Container,\n        children: /*#__PURE__*/_jsxDEV(Third_Section_List, {\n          item_count: item_count,\n          set_Item_count: set_Item_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(List, \"D9bC/3IN8MJxong9p9l3oItI71E=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Lists/Edit_List/List/Item.js"],"names":["React","useState","useEffect","Grid","Checkbox","First_Section_List","Second_Section_List","Third_Section_List","makeStyles","List","item","set_new_Item","items","styles","isChecked","set_isChecked","item_count","set_Item_count","count","console","log","JSON","stringify","handleCheck","map","obj","id","paddingLeft","paddingRight","container","item_Image_Container","item_details_Container","third_section_list_Container"],"mappings":"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","sourcesContent":["//Regular imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n//Actions\r\n\r\n//Components\r\nimport First_Section_List from \"./Sections/First/First_Section_List\";\r\nimport Second_Section_List from \"./Sections/Second/Second_Section_List\";\r\nimport Third_Section_List from \"./Sections/Third/Third_Section_List\";\r\n\r\n//Styles\r\nimport makeStyles from \"./item_styles\";\r\n\r\nconst List = ({ item, set_new_Item, items }) => {\r\n\tconst styles = makeStyles();\r\n\tconst [isChecked, set_isChecked] = useState(item.isChecked);\r\n\t//Edit List Content\r\n\tconst [item_count, set_Item_count] = useState(item.count);\r\n\r\n\t//===============================================\r\n\tconsole.log(`items: ${JSON.stringify(items)}`);\r\n\tconsole.log(`item  : ${JSON.stringify(item)}`);\r\n\r\n\t/* console.log(\"FOUND: \" + typeof items);\r\n\tconsole.log(\r\n\t\t\"FOUND: \" + JSON.stringify(items.find((obj) => obj.id === item.id))\r\n\t); */\r\n\r\n\tconst handleCheck = () => {\r\n\t\tset_isChecked(!isChecked);\r\n\t\titems.map((obj) => {\r\n\t\t\tif (obj.id === item.id) {\r\n\t\t\t\tobj.isChecked = isChecked;\r\n\t\t\t}\r\n\t\t});\r\n\t\tset_new_Item(items);\r\n\t\tconsole.log(JSON.stringify(items));\r\n\t};\r\n\r\n\t//===============================================\r\n\tuseEffect(() => {\r\n\t\t//console.log(JSON.stringify(item));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div style={{ paddingLeft: 50, paddingRight: 50 }}>\r\n\t\t\t<Grid className={styles.container} container spacing={3}>\r\n\t\t\t\t{/* Item image */}\r\n\t\t\t\t<Grid item xs={1}>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tchecked={isChecked}\r\n\t\t\t\t\t\tonChange={handleCheck}\r\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={1} className={styles.item_Image_Container}>\r\n\t\t\t\t\t<First_Section_List />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* Hide The item info to toggle the settings menu */}\r\n\r\n\t\t\t\t<Grid item xs className={styles.item_details_Container}>\r\n\t\t\t\t\t<Second_Section_List item={item} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs className={styles.third_section_list_Container}>\r\n\t\t\t\t\t<Third_Section_List\r\n\t\t\t\t\t\titem_count={item_count}\r\n\t\t\t\t\t\tset_Item_count={set_Item_count}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}