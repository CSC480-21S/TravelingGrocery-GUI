{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Items\\\\Items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch, useSelector } from \"react-redux\"; //Local imports\n\nimport Item from \"./Item/Item\";\nimport { fetch_store_items } from \"../../actions/actions\";\nimport Search_Bar from \"./Search_Bar/Search_Bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Items = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [items, set_items] = useState(useSelector(state => state.store_list.map(item => {\n    item.isChecked = false;\n    return item;\n  }))); //Fecth THE items of the store\n\n  const list_Name = useSelector(state => state.homePage.name);\n  const [items_to_be_updated, set_ItemsToBeUpdated] = useState(useSelector(state => state.list_toUpdate));\n  useEffect(() => {\n    dispatch(fetch_store_items());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search_Bar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Adding Items to \", list_Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"ADD ITEMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Items, \"7AIb5q3j76GC8GSkthahJQ2b1ZE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Items/Items.js"],"names":["React","useEffect","useState","Typography","useDispatch","useSelector","Item","fetch_store_items","Search_Bar","Items","dispatch","items","set_items","state","store_list","map","item","isChecked","list_Name","homePage","name","items_to_be_updated","set_ItemsToBeUpdated","list_toUpdate","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,KAAD,EAAQC,SAAR,IAAqBV,QAAQ,CAClCG,WAAW,CAAEQ,KAAD,IACXA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AAC9BA,IAAAA,IAAI,CAACC,SAAL,GAAiB,KAAjB;AACA,WAAOD,IAAP;AACA,GAHD,CADU,CADuB,CAAnC,CAFmB,CAShB;;AACH,QAAME,SAAS,GAAGb,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACM,QAAN,CAAeC,IAA3B,CAA7B;AACA,QAAM,CAACC,mBAAD,EAAsBC,oBAAtB,IAA8CpB,QAAQ,CAC3DG,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACU,aAAlB,CADgD,CAA5D;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACA,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,sBACC;AAAA,4BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,6BACC,QAAC,UAAD;AAAA,uCAA6BQ,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AAAA,gBACEP,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACV,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACQ,EAAhB;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YALD,eAUC;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CAnCD;;GAAMf,K;UACYL,W,EAEhBC,W,EAOiBA,W,EAEjBA,W;;;KAZII,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//Local imports\r\nimport Item from \"./Item/Item\";\r\nimport { fetch_store_items } from \"../../actions/actions\";\r\nimport Search_Bar from \"./Search_Bar/Search_Bar\";\r\n\r\nconst Items = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [items, set_items] = useState(\r\n\t\tuseSelector((state) =>\r\n\t\t\tstate.store_list.map((item) => {\r\n\t\t\t\titem.isChecked = false;\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t)\r\n\t); //Fecth THE items of the store\r\n\tconst list_Name = useSelector((state) => state.homePage.name);\r\n\tconst [items_to_be_updated, set_ItemsToBeUpdated] = useState(\r\n\t\tuseSelector((state) => state.list_toUpdate)\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetch_store_items());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Search_Bar />\r\n\t\t\t<div>\r\n\t\t\t\t<Typography>Adding Items to {list_Name}</Typography>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t<Item key={item.id} item={item} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>ADD ITEMS</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Items;\r\n"]},"metadata":{},"sourceType":"module"}