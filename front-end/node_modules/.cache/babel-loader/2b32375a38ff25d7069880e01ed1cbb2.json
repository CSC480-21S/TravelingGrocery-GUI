{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Lists\\\\Lists.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\"; //Redux\n\nimport { useSelector, useDispatch } from \"react-redux\"; //Material UI\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport AddIcon from \"@material-ui/icons/Add\"; //Components\n\nimport makeStyles from \"./Lists_styles\";\nimport List from \"./List/List\";\nimport Add_item from \"./Add_item/Add_item\"; //Actions\n\nimport { fecth_list_items } from \"../../actions/actions\";\nimport { fetch_store_items } from \"../../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lists = () => {\n  _s();\n\n  const styles = makeStyles();\n  const items = useSelector(state => state.store_list); //get items\n\n  const list_Name = useSelector(state => state.homePage.name); //gets name of the list\n\n  const user_email = useSelector(state => state.login.profileObj.email); // gets the email of the user\n\n  const user_name = useSelector(state => state.login.profileObj.name);\n  const dispatch = useDispatch(); //Dispatch an action to the reducers\n\n  const [addItem, set_addItem] = useState(false); //Do not use setState when dealing with useSelector\n  //console.log(`List from Lists Component: \\n ${JSON.stringify(list_Name)}`);\n  //console.log(\"Selector: \" + JSON.stringify(selector));\n\n  console.log(`Items from Lists Component: \\n ${JSON.stringify(items)}`);\n  useEffect(() => {\n    dispatch(fecth_list_items(user_email, list_Name));\n    /* \treturn function cleanup() {\r\n    \tsetItems(\"\");\r\n    }; */\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(fetch_store_items());\n  }, []); //======================================================================\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: styles.top_container,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: styles.userName,\n            children: [\" Hi \", user_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), addItem ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          className: styles.buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            fontSize: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 20\n            }, this),\n            className: styles.topIconButton1,\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fontSize: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 20\n            }, this),\n            className: styles.topIconButton2,\n            children: \"Delete List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Add_item, {\n        set_addItem: set_addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(List, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Lists, \"iRrroeNG8R3ZAuIsTf3+umwbF20=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Lists;\nexport default Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Lists/Lists.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Typography","Button","Grid","ShareIcon","AddIcon","makeStyles","List","Add_item","fecth_list_items","fetch_store_items","Lists","styles","items","state","store_list","list_Name","homePage","name","user_email","login","profileObj","email","user_name","dispatch","addItem","set_addItem","console","log","JSON","stringify","top_container","userName","buttons","topIconButton1","topIconButton2","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n//Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//Material UI\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n//Components\r\nimport makeStyles from \"./Lists_styles\";\r\nimport List from \"./List/List\";\r\nimport Add_item from \"./Add_item/Add_item\";\r\n//Actions\r\nimport { fecth_list_items } from \"../../actions/actions\";\r\nimport { fetch_store_items } from \"../../actions/actions\";\r\n\r\nconst Lists = () => {\r\n\tconst styles = makeStyles();\r\n\tconst items = useSelector((state) => state.store_list); //get items\r\n\tconst list_Name = useSelector((state) => state.homePage.name); //gets name of the list\r\n\tconst user_email = useSelector((state) => state.login.profileObj.email); // gets the email of the user\r\n\tconst user_name = useSelector((state) => state.login.profileObj.name);\r\n\tconst dispatch = useDispatch(); //Dispatch an action to the reducers\r\n\r\n\tconst [addItem, set_addItem] = useState(false);\r\n\r\n\t//Do not use setState when dealing with useSelector\r\n\r\n\t//console.log(`List from Lists Component: \\n ${JSON.stringify(list_Name)}`);\r\n\t//console.log(\"Selector: \" + JSON.stringify(selector));\r\n\tconsole.log(`Items from Lists Component: \\n ${JSON.stringify(items)}`);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fecth_list_items(user_email, list_Name));\r\n\t\t/* \treturn function cleanup() {\r\n\t\t\tsetItems(\"\");\r\n\t\t}; */\r\n\t}, [dispatch]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetch_store_items());\r\n\t}, []);\r\n\t//======================================================================\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<Grid container className={styles.top_container}>\r\n\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t<Typography className={styles.userName}> Hi {user_name}</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{addItem ? (\r\n\t\t\t\t\t\t<Grid item xs={9} className={styles.buttons}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tfontSize=\"small\"\r\n\t\t\t\t\t\t\t\tstartIcon={<ShareIcon />}\r\n\t\t\t\t\t\t\t\tclassName={styles.topIconButton1}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tShare\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tfontSize=\"small\"\r\n\t\t\t\t\t\t\t\tstartIcon={<AddIcon />}\r\n\t\t\t\t\t\t\t\tclassName={styles.topIconButton2}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDelete List\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Add_item set_addItem={set_addItem} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t<List item={item} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Lists;\r\n"]},"metadata":{},"sourceType":"module"}