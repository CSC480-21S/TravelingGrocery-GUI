{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Lists\\\\Lists.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\"; //Redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\"; //Material UI\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\"; //Components\n\nimport makeStyles from \"./Lists_styles\";\nimport Regular_List from \"./Regular_List/Regular_List\";\nimport Edit_List from \"./Edit_List/Edit_List\"; //Actions\n\nimport { fecth_list_items } from \"../../actions/actions\";\nimport { fetch_store_items } from \"../../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lists = () => {\n  _s();\n\n  const location = useLocat;\n  const styles = makeStyles();\n  const items = useSelector(state => state.lists); //get items\n\n  const list_Name = useSelector(state => state.homePage.name); //gets name of the list\n\n  const user = useSelector(state => state.login.profileObj); //gets user information from reducer\n\n  const [isEditable, set_isEditable] = useState(false); //Dispatch an action to the reducers\n  //console.log(`List from Lists Component: \\n ${JSON.stringify(list_Name)}`);\n  //console.log(\"Selector: \" + JSON.stringify(selector));\n  //console.log(`Items from Lists Component: \\n ${JSON.stringify(items)}`);\n  //======================================================================\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: window.location() === \"/User/Lists/listName\" ? /*#__PURE__*/_jsxDEV(Edit_List, {\n      items: items,\n      set_isEditable: set_isEditable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Regular_List, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Lists, \"qDl3qZ2BNBh8X252mNWOzI28eHo=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Lists;\nexport default Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Lists/Lists.js"],"names":["React","useEffect","useState","useSelector","useDispatch","useLocation","Typography","Button","Grid","ShareIcon","EditIcon","DeleteForeverIcon","makeStyles","Regular_List","Edit_List","fecth_list_items","fetch_store_items","Lists","location","useLocat","styles","items","state","lists","list_Name","homePage","name","user","login","profileObj","isEditable","set_isEditable","window"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGC,QAAjB;AACA,QAAMC,MAAM,GAAGR,UAAU,EAAzB;AACA,QAAMS,KAAK,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAzB,CAHmB,CAGgC;;AACnD,QAAMC,SAAS,GAAGrB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACG,QAAN,CAAeC,IAA3B,CAA7B,CAJmB,CAI4C;;AAC/D,QAAMC,IAAI,GAAGxB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACM,KAAN,CAAYC,UAAxB,CAAxB,CALmB,CAK0C;;AAC7D,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+B7B,QAAQ,CAAC,KAAD,CAA7C,CANmB,CAQnB;AAEA;AACA;AACA;AAEA;;AAEA,sBACC;AAAA,cACE8B,MAAM,CAACd,QAAP,OAAsB,sBAAtB,gBACA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEG,KAAlB;AAAyB,MAAA,cAAc,EAAEU;AAAzC;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEV;AAArB;AAAA;AAAA;AAAA;AAAA;AAJF,mBADD;AASA,CAzBD;;GAAMJ,K;UAGSd,W,EACIA,W,EACLA,W;;;KALRc,K;AA2BN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n//Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n//Material UI\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n//Components\r\nimport makeStyles from \"./Lists_styles\";\r\nimport Regular_List from \"./Regular_List/Regular_List\";\r\nimport Edit_List from \"./Edit_List/Edit_List\";\r\n//Actions\r\nimport { fecth_list_items } from \"../../actions/actions\";\r\nimport { fetch_store_items } from \"../../actions/actions\";\r\n\r\nconst Lists = () => {\r\n\tconst location = useLocat;\r\n\tconst styles = makeStyles();\r\n\tconst items = useSelector((state) => state.lists); //get items\r\n\tconst list_Name = useSelector((state) => state.homePage.name); //gets name of the list\r\n\tconst user = useSelector((state) => state.login.profileObj); //gets user information from reducer\r\n\tconst [isEditable, set_isEditable] = useState(false);\r\n\r\n\t//Dispatch an action to the reducers\r\n\r\n\t//console.log(`List from Lists Component: \\n ${JSON.stringify(list_Name)}`);\r\n\t//console.log(\"Selector: \" + JSON.stringify(selector));\r\n\t//console.log(`Items from Lists Component: \\n ${JSON.stringify(items)}`);\r\n\r\n\t//======================================================================\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{window.location() === \"/User/Lists/listName\" ? (\r\n\t\t\t\t<Edit_List items={items} set_isEditable={set_isEditable} />\r\n\t\t\t) : (\r\n\t\t\t\t<Regular_List items={items} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Lists;\r\n"]},"metadata":{},"sourceType":"module"}