{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Items\\\\Items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\"; //Local imports\n\nimport Item from \"./Item/Item\";\nimport { fetch_store_items } from \"../../actions/actions\";\nimport { set_list_to_be_updated } from \"../../actions/actions\";\nimport Search_Bar from \"./Search_Bar/Search_Bar\";\nimport makeStyles from \"./Items_styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Items = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const styles = makeStyles();\n  const list_Name = useSelector(state => state.homePage.name); //NAME OF THE LIST THAT WE ARE GOING TO ADD ITEMS\n\n  const username = useSelector(state => state.login.profileObj.email); //LIST TO BE UPDATED\n\n  const [items_to_be_updated, set_ItemsToBeUpdated] = useState(useSelector(state => state.list_toUpdate)); //STORE ITEMS\n\n  const [items, set_items] = useState(useSelector(state => state.store_list.map(item => {\n    item.listId = list_Name;\n    item.userId = username;\n    item.count = 1;\n    item.id = Math.random().toString(36).substr(2, 9);\n    item.isChecked = false;\n    return item;\n  }))); //set_ItemsToBeUpdated(items_to_be_updated.push(item))\n  // IF CHECKED ADD THE ITEMS TO THE LIST TO BE UPDATED\n\n  const handleAdd = () => {\n    items.map(item => {\n      if (item.isChecked === true) {\n        /* console.log(\r\n        \t\"items_to_be_updated: \" + JSON.stringify(items_to_be_updated)\r\n        ); */\n        try {\n          items_to_be_updated.push(item); //push returns the new index of the array\n\n          set_ItemsToBeUpdated(items_to_be_updated);\n        } catch (error) {\n          /* console.log(\r\n          \t\"items_to_be_updated: \" + JSON.stringify(items_to_be_updated)\r\n          );\r\n          console.log(\"ITEM: \" + JSON.stringify(item)); */\n          console.log(error);\n        }\n      }\n    }); //console.log(\"items_to_be_updated: \" + JSON.stringify(items_to_be_updated));\n    //\tconsole.log(\"items: \" + JSON.stringify(items));\n\n    dispatch(set_list_to_be_updated(items_to_be_updated));\n  }; //====================================================\n  //FETCH STORE ITEMS\n\n\n  useEffect(() => {\n    dispatch(fetch_store_items());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search_Bar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.text,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          fontFamily: \"Inter\",\n          fontWeight: \"600\"\n        },\n        children: [\"Adding Items to \", list_Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item,\n        items: items,\n        set_items: set_items\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAdd,\n        children: \"Add Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Items, \"I1wpI7L0auOqkxT794SXHv9F3Ys=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Items/Items.js"],"names":["React","useEffect","useState","Typography","useDispatch","useSelector","Button","Item","fetch_store_items","set_list_to_be_updated","Search_Bar","makeStyles","Items","dispatch","styles","list_Name","state","homePage","name","username","login","profileObj","email","items_to_be_updated","set_ItemsToBeUpdated","list_toUpdate","items","set_items","store_list","map","item","listId","userId","count","id","Math","random","toString","substr","isChecked","handleAdd","push","error","console","log","text","fontFamily","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//Local imports\r\nimport Item from \"./Item/Item\";\r\nimport { fetch_store_items } from \"../../actions/actions\";\r\nimport { set_list_to_be_updated } from \"../../actions/actions\";\r\nimport Search_Bar from \"./Search_Bar/Search_Bar\";\r\nimport makeStyles from \"./Items_styles\";\r\n\r\nconst Items = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst styles = makeStyles();\r\n\tconst list_Name = useSelector((state) => state.homePage.name); //NAME OF THE LIST THAT WE ARE GOING TO ADD ITEMS\r\n\tconst username = useSelector((state) => state.login.profileObj.email);\r\n\t//LIST TO BE UPDATED\r\n\tconst [items_to_be_updated, set_ItemsToBeUpdated] = useState(\r\n\t\tuseSelector((state) => state.list_toUpdate)\r\n\t);\r\n\t//STORE ITEMS\r\n\tconst [items, set_items] = useState(\r\n\t\tuseSelector((state) =>\r\n\t\t\tstate.store_list.map((item) => {\r\n\t\t\t\titem.listId = list_Name;\r\n\t\t\t\titem.userId = username;\r\n\t\t\t\titem.count = 1;\r\n\t\t\t\titem.id = Math.random().toString(36).substr(2, 9);\r\n\t\t\t\titem.isChecked = false;\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n\r\n\t//set_ItemsToBeUpdated(items_to_be_updated.push(item))\r\n\t// IF CHECKED ADD THE ITEMS TO THE LIST TO BE UPDATED\r\n\tconst handleAdd = () => {\r\n\t\titems.map((item) => {\r\n\t\t\tif (item.isChecked === true) {\r\n\t\t\t\t/* console.log(\r\n\t\t\t\t\t\"items_to_be_updated: \" + JSON.stringify(items_to_be_updated)\r\n\t\t\t\t); */\r\n\t\t\t\ttry {\r\n\t\t\t\t\titems_to_be_updated.push(item); //push returns the new index of the array\r\n\t\t\t\t\tset_ItemsToBeUpdated(items_to_be_updated);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t/* console.log(\r\n\t\t\t\t\t\t\"items_to_be_updated: \" + JSON.stringify(items_to_be_updated)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconsole.log(\"ITEM: \" + JSON.stringify(item)); */\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t//console.log(\"items_to_be_updated: \" + JSON.stringify(items_to_be_updated));\r\n\t\t//\tconsole.log(\"items: \" + JSON.stringify(items));\r\n\t\tdispatch(set_list_to_be_updated(items_to_be_updated));\r\n\t};\r\n\t//====================================================\r\n\r\n\t//FETCH STORE ITEMS\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetch_store_items());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Search_Bar />\r\n\t\t\t<div className={styles.text}>\r\n\t\t\t\t<Typography style={{ fontFamily: \"Inter\", fontWeight: \"600\" }}>\r\n\t\t\t\t\tAdding Items to {list_Name}\r\n\t\t\t\t</Typography>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t<Item key={item.id} item={item} items={items} set_items={set_items} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button onClick={handleAdd}>Add Items</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Items;\r\n"]},"metadata":{},"sourceType":"module"}