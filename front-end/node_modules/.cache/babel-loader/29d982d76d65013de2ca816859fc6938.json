{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Lists\\\\Edit_List\\\\Edit_List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { set_list_to_be_updated } from \"../../../actions/actions\"; //Local imports\n\nimport Add_Item from \"./Add_Item/Add_item\";\nimport Confirm from \"./Confirm/Confirm\";\nimport Item from \"./List/Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit_List = () => {\n  _s();\n\n  const dispatch = useDispatch(); //ADD CHECK MARK BOOLEAN TO A NEW LIST OBJECT\n\n  const [new_Items, set_new_Item] = useState(useSelector(state => state.list_toUpdate.map(item => {\n    item.isChecked = false;\n    return item;\n  }))); //REMOVE ITEMS FROM THE LIST IF CHECK MARK BOOLEAN IS TRUE\n\n  const handleDelete = () => {\n    let temp = new_Items.filter(item => item.isChecked === false);\n    set_new_Item(temp);\n  }; //UPTADE REDUX STATE (LIST_TOUPDATE) WHEN THE COMPONENT IS RENDERED\n\n\n  useEffect(() => {\n    //console.log(\"FROM EDIT LISTS: \" + JSON.stringify(new_Items));\n    dispatch(set_list_to_be_updated(new_Items));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Add_Item, {\n        set_new_Item: set_new_Item,\n        new_Items: new_Items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: new_Items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item,\n        set_new_Item: set_new_Item,\n        new_Items: new_Items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Confirm, {\n        new_Items: new_Items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Edit_List, \"gbwiRjF8Xuht2U6hTahci0zyIMM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Edit_List;\nexport default Edit_List;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit_List\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Lists/Edit_List/Edit_List.js"],"names":["React","useEffect","useState","useSelector","useDispatch","set_list_to_be_updated","Add_Item","Confirm","Item","Edit_List","dispatch","new_Items","set_new_Item","state","list_toUpdate","map","item","isChecked","handleDelete","temp","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,sBAAT,QAAuC,0BAAvC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CADuB,CAGvB;;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CACzCC,WAAW,CAAEU,KAAD,IACXA,KAAK,CAACC,aAAN,CAAoBC,GAApB,CAAyBC,IAAD,IAAU;AACjCA,IAAAA,IAAI,CAACC,SAAL,GAAiB,KAAjB;AACA,WAAOD,IAAP;AACA,GAHD,CADU,CAD8B,CAA1C,CAJuB,CAYvB;;AACA,QAAME,YAAY,GAAG,MAAM;AAC1B,QAAIC,IAAI,GAAGR,SAAS,CAACS,MAAV,CAAkBJ,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,KAA9C,CAAX;AACAL,IAAAA,YAAY,CAACO,IAAD,CAAZ;AACA,GAHD,CAbuB,CAkBvB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACf;AACAS,IAAAA,QAAQ,CAACL,sBAAsB,CAACM,SAAD,CAAvB,CAAR;AACA,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACC;AAAA,4BACC;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEC,YAAxB;AAAsC,QAAA,SAAS,EAAED;AAAjD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AAAA,gBACEA,SAAS,CAACI,GAAV,CAAeC,IAAD,iBACd,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,YAAY,EAAEJ,YAAhC;AAA8C,QAAA,SAAS,EAAED;AAAzD;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAJD,eASC;AAAA,6BACC;AAAQ,QAAA,OAAO,EAAEO,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YATD,eAYC;AAAA,6BACC,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAZD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CA1CD;;GAAMF,S;UACYL,W,EAIhBD,W;;;KALIM,S;AA4CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { set_list_to_be_updated } from \"../../../actions/actions\";\r\n//Local imports\r\nimport Add_Item from \"./Add_Item/Add_item\";\r\nimport Confirm from \"./Confirm/Confirm\";\r\nimport Item from \"./List/Item\";\r\n\r\nconst Edit_List = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\t//ADD CHECK MARK BOOLEAN TO A NEW LIST OBJECT\r\n\tconst [new_Items, set_new_Item] = useState(\r\n\t\tuseSelector((state) =>\r\n\t\t\tstate.list_toUpdate.map((item) => {\r\n\t\t\t\titem.isChecked = false;\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n\t//REMOVE ITEMS FROM THE LIST IF CHECK MARK BOOLEAN IS TRUE\r\n\tconst handleDelete = () => {\r\n\t\tlet temp = new_Items.filter((item) => item.isChecked === false);\r\n\t\tset_new_Item(temp);\r\n\t};\r\n\r\n\t//UPTADE REDUX STATE (LIST_TOUPDATE) WHEN THE COMPONENT IS RENDERED\r\n\tuseEffect(() => {\r\n\t\t//console.log(\"FROM EDIT LISTS: \" + JSON.stringify(new_Items));\r\n\t\tdispatch(set_list_to_be_updated(new_Items));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<Add_Item set_new_Item={set_new_Item} new_Items={new_Items} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{new_Items.map((item) => (\r\n\t\t\t\t\t<Item item={item} set_new_Item={set_new_Item} new_Items={new_Items} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={handleDelete}>Delete</button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Confirm new_Items={new_Items} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Edit_List;\r\n"]},"metadata":{},"sourceType":"module"}