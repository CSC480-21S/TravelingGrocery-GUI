{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\HomePage\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\n//Libraries\nimport { React, useState, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\"; //Styles\n\nimport makeStyles from \"../../styles/HomePage\"; //Components\n\nimport CreateList from \"./CreateList\";\nimport { sendList } from \"../../actions/actions\";\nimport { fetchLists } from \"../../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const styles = makeStyles();\n  const history = useHistory();\n  const lists = useSelector(state => state.createList); // gets the lists from server\n\n  const profile = useSelector(state => state.login); //gets profile info from Google login\n\n  console.log(\"Profile from HomePage:\" + profile);\n  console.log(\"Lists From HomePage: \" + JSON.stringify(lists));\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleList = list => {\n    dispatch(sendList(list));\n    history.push(\"/User/Lists/listName\");\n  };\n\n  useEffect(() => {\n    //console.log(\"Hello useEffect App: Dispatching Lists\")\n    console.log(\" Email:\" + profile.profileObj.email);\n    dispatch(fetchLists(profile.profileObj.email));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: styles.superContainer,\n    direction: \"column\",\n    spacing: 4,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: styles.test,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.userName,\n        children: [\"Hi \", profile.profileObj.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n            className: styles.iconButton,\n            onClick: handleClickOpen,\n            children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CreateList, {\n            open: open,\n            onClose: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: styles.test,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.sharedList,\n        children: \"Shared List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.regularButton,\n            children: \"Shared List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: styles.iconButton,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HomePage, \"fgjyNYSx5Mq9UFGpYK3BKvCaiRc=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/HomePage/HomePage.js"],"names":["React","useState","useEffect","Typography","Button","AddIcon","IconButton","Grid","useSelector","useHistory","useDispatch","makeStyles","CreateList","sendList","fetchLists","HomePage","dispatch","styles","history","lists","state","createList","profile","login","console","log","JSON","stringify","open","setOpen","handleClickOpen","handleClose","handleList","list","push","profileObj","email","superContainer","test","userName","name","iconButton","sharedList","regularButton"],"mappings":";;;AAAA;AACA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGN,UAAU,EAAzB;AACA,QAAMO,OAAO,GAAGT,UAAU,EAA1B;AAEA,QAAMU,KAAK,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,UAAlB,CAAzB,CALsB,CAKkC;;AACxD,QAAMC,OAAO,GAAGd,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACG,KAAlB,CAA3B,CANsB,CAM+B;;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BH,OAAvC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAtC;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAM6B,eAAe,GAAG,MAAM;AAC7BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,GAFD;;AAGA,QAAME,WAAW,GAAG,MAAM;AACzBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAFD;;AAGA,QAAMG,UAAU,GAAIC,IAAD,IAAU;AAC5BjB,IAAAA,QAAQ,CAACH,QAAQ,CAACoB,IAAD,CAAT,CAAR;AACAf,IAAAA,OAAO,CAACgB,IAAR,CAAa,sBAAb;AACA,GAHD;;AAKAhC,EAAAA,SAAS,CAAC,MAAM;AACf;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYH,OAAO,CAACa,UAAR,CAAmBC,KAA3C;AACApB,IAAAA,QAAQ,CAACF,UAAU,CAACQ,OAAO,CAACa,UAAR,CAAmBC,KAApB,CAAX,CAAR;AACA,GAJQ,EAIN,CAACpB,QAAD,CAJM,CAAT;AAMA,sBACC,QAAC,IAAD;AACC,IAAA,SAAS,MADV;AAEC,IAAA,SAAS,EAAEC,MAAM,CAACoB,cAFnB;AAGC,IAAA,SAAS,EAAC,QAHX;AAIC,IAAA,OAAO,EAAE,CAJV;AAAA,4BAQC,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAEpB,MAAM,CAACqB,IAA7B;AAAA,8BACC,QAAC,UAAD;AAAY,QAAA,SAAS,EAAErB,MAAM,CAACsB,QAA9B;AAAA,0BACKjB,OAAO,CAACa,UAAR,CAAmBK,IADxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,+BAWC,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,qBACE,GADF,eAGC,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEvB,MAAM,CAACwB,UAA9B;AAA0C,YAAA,OAAO,EAAEX,eAAnD;AAAA,uBACE,GADF,eAGC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,eAQC,QAAC,UAAD;AAAY,YAAA,IAAI,EAAEF,IAAlB;AAAwB,YAAA,OAAO,EAAEG;AAAjC;AAAA;AAAA;AAAA;AAAA,kBARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAXD;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YARD,eAoCC,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAEd,MAAM,CAACqB,IAA7B;AAAA,8BACC,QAAC,UAAD;AAAY,QAAA,SAAS,EAAErB,MAAM,CAACyB,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACC,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACC,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEzB,MAAM,CAAC0B,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACC,QAAC,UAAD;AAAY,YAAA,SAAS,EAAE1B,MAAM,CAACwB,UAA9B;AAAA,mCACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAYC;AAAA;AAAA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA,YApCD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqDA,CAlFD;;GAAM1B,Q;UACYL,W,EAEDD,U,EAEFD,W,EACEA,W;;;KANXO,Q;AAoFN,eAAeA,QAAf","sourcesContent":["//Libraries\r\nimport { React, useState, useEffect } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n//Styles\r\nimport makeStyles from \"../../styles/HomePage\";\r\n//Components\r\nimport CreateList from \"./CreateList\";\r\nimport { sendList } from \"../../actions/actions\";\r\nimport { fetchLists } from \"../../actions/actions\";\r\n\r\nconst HomePage = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst styles = makeStyles();\r\n\tconst history = useHistory();\r\n\r\n\tconst lists = useSelector((state) => state.createList); // gets the lists from server\r\n\tconst profile = useSelector((state) => state.login); //gets profile info from Google login\r\n\tconsole.log(\"Profile from HomePage:\" + profile);\r\n\tconsole.log(\"Lists From HomePage: \" + JSON.stringify(lists));\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst handleList = (list) => {\r\n\t\tdispatch(sendList(list));\r\n\t\thistory.push(\"/User/Lists/listName\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//console.log(\"Hello useEffect App: Dispatching Lists\")\r\n\t\tconsole.log(\" Email:\" + profile.profileObj.email);\r\n\t\tdispatch(fetchLists(profile.profileObj.email));\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tclassName={styles.superContainer}\r\n\t\t\tdirection=\"column\"\r\n\t\t\tspacing={4}\r\n\t\t>\r\n\t\t\t{/* User Regular Lists */}\r\n\t\t\t{/* <p>{profile.tokenObj.id_token}</p> */}\r\n\t\t\t<Grid item className={styles.test}>\r\n\t\t\t\t<Typography className={styles.userName}>\r\n\t\t\t\t\tHi {profile.profileObj.name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t{/* {lists.map((list) => (\r\n\t\t\t\t\t\t<Grid item key={list.id}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={styles.regularButton}\r\n\t\t\t\t\t\t\t\tonClick={() => handleList(list)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{list.name}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))} */}\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t{/* Add List Button */}\r\n\t\t\t\t\t\t<IconButton className={styles.iconButton} onClick={handleClickOpen}>\r\n\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t{/*This is the PopUp menu*/}\r\n\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<CreateList open={open} onClose={handleClose} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t{/* Shared Item List */}\r\n\t\t\t<Grid item className={styles.test}>\r\n\t\t\t\t<Typography className={styles.sharedList}>Shared List</Typography>\r\n\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button className={styles.regularButton}>Shared List</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<IconButton className={styles.iconButton}>\r\n\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<br />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}