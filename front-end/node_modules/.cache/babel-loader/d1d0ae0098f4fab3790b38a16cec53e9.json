{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Lists\\\\List\\\\List.js\",\n    _s = $RefreshSig$();\n\n//Regular imports\nimport React from \"react\";\nimport { useState } from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\"; //Actions\n//Components\n\nimport test from \"../../../images/test.jpg\";\nimport Options from \"./Options\"; //Styles\n\nimport makeStyles from \"../../../styles/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  item\n}) => {\n  _s();\n\n  const styles = makeStyles();\n  const [count, setCount] = useState(0);\n  const [open_Drawer, setOpen_Drawer] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: styles.root,\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        className: styles.itemImageContainer,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: test,\n          variant: \"rounded\",\n          className: styles.itemImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: styles.details,\n        container: true,\n        xs: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: styles.itemName,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: styles.itemType,\n            children: \"Item Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: styles.itemLocation,\n            children: \"Item location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: styles.info,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          className: styles.moreIcon,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"random\",\n            onClick: console.log(open_Drawer),\n            children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Options, {\n            open: open_Drawer,\n            setOpen_Drawer: setOpen_Drawer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: styles.minus,\n              onClick: () => count > 0 ? setCount(count - 1) : count,\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.count,\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.plus,\n              onClick: () => setCount(count + 1),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_s(List, \"1XRqJQOUniuxcY3y4XGpYsVQ+Rs=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Lists/List/List.js"],"names":["React","useState","CardContent","Typography","Avatar","Button","ButtonGroup","Grid","MoreHorizIcon","test","Options","makeStyles","List","item","styles","count","setCount","open_Drawer","setOpen_Drawer","root","itemImageContainer","itemImage","details","itemName","name","itemType","itemLocation","info","moreIcon","console","log","minus","plus"],"mappings":"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","sourcesContent":["//Regular imports\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n//Actions\r\n\r\n//Components\r\nimport test from \"../../../images/test.jpg\";\r\nimport Options from \"./Options\";\r\n//Styles\r\nimport makeStyles from \"../../../styles/List\";\r\n\r\nconst List = ({ item }) => {\r\n\tconst styles = makeStyles();\r\n\tconst [count, setCount] = useState(0);\r\n\tconst [open_Drawer, setOpen_Drawer] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Grid className={styles.root} container spacing={1}>\r\n\t\t\t\t<Grid item xs={2} className={styles.itemImageContainer}>\r\n\t\t\t\t\t<Avatar src={test} variant=\"rounded\" className={styles.itemImage} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* ============================================ */}\r\n\t\t\t\t<Grid className={styles.details} container xs={5}>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Typography className={styles.itemName}>{item.name}</Typography>\r\n\t\t\t\t\t\t<Typography className={styles.itemType}>Item Type</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Typography className={styles.itemLocation}>\r\n\t\t\t\t\t\t\tItem location\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* ============================================ */}\r\n\t\t\t\t<Grid item className={styles.info}>\r\n\t\t\t\t\t<CardContent className={styles.moreIcon}>\r\n\t\t\t\t\t\t{/* Three dots icon */}\r\n\t\t\t\t\t\t<Button className={\"random\"} onClick={console.log(open_Drawer)}>\r\n\t\t\t\t\t\t\t<MoreHorizIcon />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Options open={open_Drawer} setOpen_Drawer={setOpen_Drawer} />\r\n\t\t\t\t\t\t{/* Drawer */}\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={styles.minus}\r\n\t\t\t\t\t\t\t\tonClick={() => (count > 0 ? setCount(count - 1) : count)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button className={styles.count}>{count}</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={styles.plus}\r\n\t\t\t\t\t\t\t\tonClick={() => setCount(count + 1)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}