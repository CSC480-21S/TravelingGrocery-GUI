{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\CreateList.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport { useDispatch } from 'react-redux';\nimport makeStyles from '../styles/CreasteList';\nimport { create_List } from '../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateList = props => {\n  _s();\n\n  const [list, setList] = useState({\n    name: ' ',\n    items: []\n  });\n  const styles = makeStyles();\n  const dispatch = useDispatch();\n  const {\n    onClose,\n    newList,\n    open\n  } = props;\n\n  const handleClose = () => {\n    clearInput();\n    onClose(newList);\n  };\n\n  const clearInput = () => {\n    setList({\n      name: ' ',\n      items: []\n    });\n  };\n\n  const createNewList = async e => {\n    e.preventDefault();\n    dispatch(create_List(list));\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      open: open,\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: styles.title,\n        children: \"Create List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `${styles.root} ${styles.mainContainer}`,\n        onSubmit: createNewList,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: styles.formControl,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            className: styles.inputText,\n            value: list.name,\n            onChange: e => setList({ ...list,\n              name: e.target.value\n            }),\n            placeholder: \"Enter Name\",\n            InputProps: {\n              disableUnderline: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: styles.submitButton,\n            children: \"Create New List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateList, \"7uaS+Be55p/WADhaq7SpCcUzJZA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateList;\nexport default CreateList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateList\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/CreateList.js"],"names":["React","useState","Dialog","TextField","Button","Grid","CloseIcon","IconButton","DialogActions","DialogContent","FormControl","useDispatch","makeStyles","create_List","CreateList","props","list","setList","name","items","styles","dispatch","onClose","newList","open","handleClose","clearInput","createNewList","e","preventDefault","main","title","root","mainContainer","formControl","inputText","target","value","disableUnderline","submitButton"],"mappings":"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","sourcesContent":["import { React, useState } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport { useDispatch } from 'react-redux'\r\nimport makeStyles from '../styles/CreasteList'\r\n\r\nimport { create_List } from '../actions/actions'\r\n\r\nconst CreateList = (props) => {\r\n    const [list, setList] = useState({ name: ' ', items: [] })\r\n    const styles = makeStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    const { onClose, newList, open } = props\r\n\r\n    const handleClose = () => {\r\n        clearInput()\r\n        onClose(newList)\r\n    }\r\n    const clearInput = () =>{\r\n        setList({ name: ' ', items: [] })\r\n    }\r\n    const createNewList = async (e) => {\r\n        e.preventDefault()\r\n        dispatch(create_List(list))\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog onClose={handleClose} open={open} className={styles.main}>\r\n                <DialogActions>\r\n                    <IconButton>\r\n                        <CloseIcon></CloseIcon>\r\n                    </IconButton>\r\n                </DialogActions>\r\n                <DialogContent className={styles.title}>Create List</DialogContent>\r\n                <form className={`${styles.root} ${styles.mainContainer}`} onSubmit={createNewList}>\r\n                    <FormControl className={styles.formControl}>\r\n                        <TextField  fullWidth className={styles.inputText} value={list.name} onChange={(e) => setList({ ...list, name: e.target.value })}\r\n                            placeholder=\"Enter Name\"\r\n                            InputProps={{              \r\n                                disableUnderline: true,     \r\n                            }}\r\n                        ></TextField>\r\n                        <Button type='submit'  className={styles.submitButton}>Create New List</Button>\r\n                    </FormControl>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateList\r\n"]},"metadata":{},"sourceType":"module"}