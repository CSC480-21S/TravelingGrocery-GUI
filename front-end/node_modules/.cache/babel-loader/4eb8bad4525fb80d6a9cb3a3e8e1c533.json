{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Login_SingOut\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { useGoogleLogin } from \"react-google-login\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\"; //Local components\n\nimport { send_Google_User_info } from \"../../actions/actions\";\nimport { test_api } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [test, setTest] = useState(\"Empty\");\n\n  const getStuff = async () => {\n    try {\n      const test2 = test_api();\n      return test2;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  console.log(`GET FROM OL: ${getStuff()}`); //when Login works\n\n  const onSuccess = response => {\n    console.log(`Login Success: currentUser ${response.profileObj}`); //console.log('Loaded: ' + loaded)\n\n    dispatch(send_Google_User_info(response));\n    setTest(response.profileObj.name); //history.push(\"/home\");\n  }; //When login is a failute\n\n\n  const onFailure = response => {//console.log(\"Error: \" + response);\n  };\n\n  const {\n    signIn,\n    loaded\n  } = useGoogleLogin({\n    onSuccess: onSuccess,\n    clientId: \"534704394140-vgqdcmbmel4gn1bfa7g3hd6h70qm5c6m.apps.googleusercontent.com\",\n    isSignedIn: true,\n    onFailure: onFailure,\n    cookiePolicy: \"single_host_origin\",\n    uxMode: \"redirect\"\n  }); //=================================\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"534704394140-vgqdcmbmel4gn1bfa7g3hd6h70qm5c6m.apps.googleusercontent.com\",\n      buttonText: \"Login\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      isSignedIn: true,\n      cookiePolicy: \"single_host_origin\",\n      uxMode: \"redirect\",\n      redirectUri: \"http://localhost:3000/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"THIS IS A TEST: \", test]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"pXlj9WIardpDVIZFGWuX9qlC9FE=\", false, function () {\n  return [useDispatch, useHistory, useGoogleLogin];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Login_SingOut/Login.js"],"names":["React","useEffect","useState","useGoogleLogin","GoogleLogin","useHistory","useDispatch","Button","send_Google_User_info","test_api","Login","dispatch","history","test","setTest","getStuff","test2","error","console","log","message","onSuccess","response","profileObj","name","onFailure","signIn","loaded","clientId","isSignedIn","cookiePolicy","uxMode"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AAEA,SAASC,QAAT,QAAyB,eAAzB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,OAAD,CAAhC;;AAEA,QAAMa,QAAQ,GAAG,YAAY;AAC5B,QAAI;AACH,YAAMC,KAAK,GAAGP,QAAQ,EAAtB;AACA,aAAOO,KAAP;AACA,KAHD,CAGE,OAAOC,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACA;AACD,GAPD;;AAQAF,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeJ,QAAQ,EAAG,EAAvC,EAbmB,CAenB;;AACA,QAAMM,SAAS,GAAIC,QAAD,IAAc;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BG,QAAQ,CAACC,UAAW,EAA9D,EAD+B,CAE/B;;AACAZ,IAAAA,QAAQ,CAACH,qBAAqB,CAACc,QAAD,CAAtB,CAAR;AACAR,IAAAA,OAAO,CAACQ,QAAQ,CAACC,UAAT,CAAoBC,IAArB,CAAP,CAJ+B,CAM/B;AACA,GAPD,CAhBmB,CAwBnB;;;AACA,QAAMC,SAAS,GAAIH,QAAD,IAAc,CAC/B;AACA,GAFD;;AAIA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBxB,cAAc,CAAC;AACzCkB,IAAAA,SAAS,EAAEA,SAD8B;AAEzCO,IAAAA,QAAQ,EACP,0EAHwC;AAIzCC,IAAAA,UAAU,EAAE,IAJ6B;AAKzCJ,IAAAA,SAAS,EAAEA,SAL8B;AAMzCK,IAAAA,YAAY,EAAE,oBAN2B;AAOzCC,IAAAA,MAAM,EAAE;AAPiC,GAAD,CAAzC,CA7BmB,CAsCnB;;AAEA,sBACC;AAAA,4BACC,QAAC,WAAD;AACC,MAAA,QAAQ,EACP,0EAFF;AAIC,MAAA,UAAU,EAAC,OAJZ;AAKC,MAAA,SAAS,EAAEV,SALZ;AAMC,MAAA,SAAS,EAAEI,SANZ;AAOC,MAAA,UAAU,EAAE,IAPb;AAQC,MAAA,YAAY,EAAE,oBARf;AASC,MAAA,MAAM,EAAE,UATT;AAUC,MAAA,WAAW,EAAE;AAVd;AAAA;AAAA;AAAA;AAAA,YADD,eAiBC;AAAA,qCAAoBZ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBD;AAAA,kBADD;AAqBA,CA7DD;;GAAMH,K;UACYJ,W,EACDD,U,EA2BWF,c;;;KA7BtBO,K;AA+DN,eAAeA,KAAf","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\n\r\nimport { useGoogleLogin } from \"react-google-login\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//Local components\r\nimport { send_Google_User_info } from \"../../actions/actions\";\r\n\r\nimport { test_api } from \"../../api/api\";\r\n\r\nconst Login = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst [test, setTest] = useState(\"Empty\");\r\n\r\n\tconst getStuff = async () => {\r\n\t\ttry {\r\n\t\t\tconst test2 = test_api();\r\n\t\t\treturn test2;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.message);\r\n\t\t}\r\n\t};\r\n\tconsole.log(`GET FROM OL: ${getStuff()}`);\r\n\r\n\t//when Login works\r\n\tconst onSuccess = (response) => {\r\n\t\tconsole.log(`Login Success: currentUser ${response.profileObj}`);\r\n\t\t//console.log('Loaded: ' + loaded)\r\n\t\tdispatch(send_Google_User_info(response));\r\n\t\tsetTest(response.profileObj.name);\r\n\r\n\t\t//history.push(\"/home\");\r\n\t};\r\n\t//When login is a failute\r\n\tconst onFailure = (response) => {\r\n\t\t//console.log(\"Error: \" + response);\r\n\t};\r\n\r\n\tconst { signIn, loaded } = useGoogleLogin({\r\n\t\tonSuccess: onSuccess,\r\n\t\tclientId:\r\n\t\t\t\"534704394140-vgqdcmbmel4gn1bfa7g3hd6h70qm5c6m.apps.googleusercontent.com\",\r\n\t\tisSignedIn: true,\r\n\t\tonFailure: onFailure,\r\n\t\tcookiePolicy: \"single_host_origin\",\r\n\t\tuxMode: \"redirect\",\r\n\t});\r\n\t//=================================\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GoogleLogin\r\n\t\t\t\tclientId={\r\n\t\t\t\t\t\"534704394140-vgqdcmbmel4gn1bfa7g3hd6h70qm5c6m.apps.googleusercontent.com\"\r\n\t\t\t\t}\r\n\t\t\t\tbuttonText=\"Login\"\r\n\t\t\t\tonSuccess={onSuccess}\r\n\t\t\t\tonFailure={onFailure}\r\n\t\t\t\tisSignedIn={true}\r\n\t\t\t\tcookiePolicy={\"single_host_origin\"}\r\n\t\t\t\tuxMode={\"redirect\"}\r\n\t\t\t\tredirectUri={\"http://localhost:3000/login\"}\r\n\t\t\t/>\r\n\t\t\t{/* <Button onClick={signIn} className=\"login_button\">\r\n\t\t\t\tLogin\r\n\t\t\t</Button> */}\r\n\r\n\t\t\t<p>THIS IS A TEST: {test}</p>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}