{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Lists\\\\Lists.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\"; //Redux\n\nimport { useSelector, useDispatch } from \"react-redux\"; //Material UI\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport AddIcon from \"@material-ui/icons/Add\"; //Components\n\nimport makeStyles from \"../../styles/Lists\";\nimport List from \"./List\"; //Actions\n\nimport { fecth_list_items } from \"../../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lists = () => {\n  _s();\n\n  const styles = makeStyles();\n  const list = useSelector(state => state.homePage);\n  const user = useSelector(state => state.login.profileObj.email);\n  const dispatch = useDispatch();\n  console.log(`List from Lists Component: ${JSON.stringify(list)}`);\n  useEffect(() => {\n    dispatch(fecth_list_items(user, list.name));\n  }, [dispatch]); //======================================================================\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: styles.user,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            class: styles.userName,\n            children: \" Hi Justin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          className: styles.buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            fontSize: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this),\n            className: styles.topIconButton,\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fontSize: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this),\n            className: styles.topIconButton2,\n            children: \"Delete List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Lists, \"LYcusw5YY2LESgMcCvM3RVlDgNc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Lists;\nexport default Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Lists/Lists.js"],"names":["React","useEffect","useSelector","useDispatch","Typography","Button","Grid","ShareIcon","AddIcon","makeStyles","List","fecth_list_items","Lists","styles","list","state","homePage","user","login","profileObj","email","dispatch","console","log","JSON","stringify","name","userName","buttons","topIconButton","topIconButton2"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGJ,UAAU,EAAzB;AACA,QAAMK,IAAI,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAAxB;AACA,QAAMC,IAAI,GAAGf,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACG,KAAN,CAAYC,UAAZ,CAAuBC,KAAnC,CAAxB;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAqB,EAA/D;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACfoB,IAAAA,QAAQ,CAACV,gBAAgB,CAACM,IAAD,EAAOH,IAAI,CAACY,IAAZ,CAAjB,CAAR;AACA,GAFQ,EAEN,CAACL,QAAD,CAFM,CAAT,CARmB,CAWnB;;AAEA,sBACC;AAAA,4BACC;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAER,MAAM,CAACI,IAAlC;AAAA,gCACC,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACC,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEJ,MAAM,CAACc,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,SAAS,EAAEd,MAAM,CAACe,OAApC;AAAA,kCACC,QAAC,MAAD;AACC,YAAA,QAAQ,EAAC,OADV;AAEC,YAAA,SAAS,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBAFZ;AAGC,YAAA,SAAS,EAAEf,MAAM,CAACgB,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAQC,QAAC,MAAD;AACC,YAAA,QAAQ,EAAC,OADV;AAEC,YAAA,SAAS,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAFZ;AAGC,YAAA,SAAS,EAAEhB,MAAM,CAACiB,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAwBC;AAAA;AAAA;AAAA;AAAA,YAxBD;AAAA,kBADD;AA8BA,CA3CD;;GAAMlB,K;UAEQV,W,EACAA,W,EACIC,W;;;KAJZS,K;AA6CN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\n//Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//Material UI\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n//Components\r\nimport makeStyles from \"../../styles/Lists\";\r\nimport List from \"./List\";\r\n//Actions\r\nimport { fecth_list_items } from \"../../actions/actions\";\r\n\r\nconst Lists = () => {\r\n\tconst styles = makeStyles();\r\n\tconst list = useSelector((state) => state.homePage);\r\n\tconst user = useSelector((state) => state.login.profileObj.email);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconsole.log(`List from Lists Component: ${JSON.stringify(list)}`);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fecth_list_items(user, list.name));\r\n\t}, [dispatch]);\r\n\t//======================================================================\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<Grid container className={styles.user}>\r\n\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t<Typography class={styles.userName}> Hi Justin</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={9} className={styles.buttons}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfontSize=\"small\"\r\n\t\t\t\t\t\t\tstartIcon={<ShareIcon />}\r\n\t\t\t\t\t\t\tclassName={styles.topIconButton}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tShare\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfontSize=\"small\"\r\n\t\t\t\t\t\t\tstartIcon={<AddIcon />}\r\n\t\t\t\t\t\t\tclassName={styles.topIconButton2}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDelete List\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t\t<div>{/* {list.map((item) => (\r\n\t\t\t\t\t<List list={item} />\r\n\t\t\t\t))} */}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Lists;\r\n"]},"metadata":{},"sourceType":"module"}