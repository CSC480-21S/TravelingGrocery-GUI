{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Login_SingOut\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { useGoogleLogin } from \"react-google-login\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\"; //Local components\n\nimport { send_Google_User_info } from \"../../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [test, setTest] = useState(\"Empty\");\n  const client_id = \"534704394140-vgqdcmbmel4gn1bfa7g3hd6h70qm5c6m.apps.googleusercontent.com\"; //when Login works\n\n  const onSuccess = response => {\n    console.log(`Login Success: currentUser ${response.profileObj}`); //console.log('Loaded: ' + loaded)\n    //dispatch(send_Google_User_info(response));\n    //setTest(response.profileObj.name);\n\n    history.push(\"/home\");\n  }; //When login is a failute\n\n\n  const onFailure = response => {\n    console.log(\"Error: \" + response);\n  };\n\n  const {\n    signIn,\n    loaded\n  } = useGoogleLogin({\n    onSuccess: onSuccess,\n    clientId: client_id,\n    isSignedIn: true,\n    onFailure: onFailure\n  }); //=================================\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: client_id,\n      buttonText: \"Login\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: \"single_host_origin\",\n      isSignedIn: true,\n      redirectUri: \"http://localhost:3000/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"THIS IS A TEST: \", test]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"pXlj9WIardpDVIZFGWuX9qlC9FE=\", false, function () {\n  return [useDispatch, useHistory, useGoogleLogin];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Login_SingOut/Login.js"],"names":["React","useEffect","useState","useGoogleLogin","GoogleLogin","useHistory","useDispatch","Button","send_Google_User_info","Login","dispatch","history","test","setTest","client_id","onSuccess","response","console","log","profileObj","push","onFailure","signIn","loaded","clientId","isSignedIn"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,SAASC,qBAAT,QAAsC,uBAAtC;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAMY,SAAS,GACd,0EADD,CAJmB,CAOnB;;AACA,QAAMC,SAAS,GAAIC,QAAD,IAAc;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BF,QAAQ,CAACG,UAAW,EAA9D,EAD+B,CAE/B;AACA;AACA;;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,OAAb;AACA,GAND,CARmB,CAenB;;;AACA,QAAMC,SAAS,GAAIL,QAAD,IAAc;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,QAAxB;AACA,GAFD;;AAIA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBpB,cAAc,CAAC;AACzCY,IAAAA,SAAS,EAAEA,SAD8B;AAEzCS,IAAAA,QAAQ,EAAEV,SAF+B;AAGzCW,IAAAA,UAAU,EAAE,IAH6B;AAIzCJ,IAAAA,SAAS,EAAEA;AAJ8B,GAAD,CAAzC,CApBmB,CA0BnB;;AAEA,sBACC;AAAA,4BACC,QAAC,WAAD;AACC,MAAA,QAAQ,EAAEP,SADX;AAEC,MAAA,UAAU,EAAC,OAFZ;AAGC,MAAA,SAAS,EAAEC,SAHZ;AAIC,MAAA,SAAS,EAAEM,SAJZ;AAKC,MAAA,YAAY,EAAE,oBALf;AAMC,MAAA,UAAU,EAAE,IANb;AAOC,MAAA,WAAW,EAAE;AAPd;AAAA;AAAA;AAAA;AAAA,YADD,eAcC;AAAA,qCAAoBT,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAdD;AAAA,kBADD;AAkBA,CA9CD;;GAAMH,K;UACYH,W,EACDD,U,EAkBWF,c;;;KApBtBM,K;AAgDN,eAAeA,KAAf","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\n\r\nimport { useGoogleLogin } from \"react-google-login\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//Local components\r\nimport { send_Google_User_info } from \"../../actions/actions\";\r\n\r\nconst Login = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst [test, setTest] = useState(\"Empty\");\r\n\tconst client_id =\r\n\t\t\"534704394140-vgqdcmbmel4gn1bfa7g3hd6h70qm5c6m.apps.googleusercontent.com\";\r\n\r\n\t//when Login works\r\n\tconst onSuccess = (response) => {\r\n\t\tconsole.log(`Login Success: currentUser ${response.profileObj}`);\r\n\t\t//console.log('Loaded: ' + loaded)\r\n\t\t//dispatch(send_Google_User_info(response));\r\n\t\t//setTest(response.profileObj.name);\r\n\t\thistory.push(\"/home\");\r\n\t};\r\n\t//When login is a failute\r\n\tconst onFailure = (response) => {\r\n\t\tconsole.log(\"Error: \" + response);\r\n\t};\r\n\r\n\tconst { signIn, loaded } = useGoogleLogin({\r\n\t\tonSuccess: onSuccess,\r\n\t\tclientId: client_id,\r\n\t\tisSignedIn: true,\r\n\t\tonFailure: onFailure,\r\n\t});\r\n\t//=================================\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GoogleLogin\r\n\t\t\t\tclientId={client_id}\r\n\t\t\t\tbuttonText=\"Login\"\r\n\t\t\t\tonSuccess={onSuccess}\r\n\t\t\t\tonFailure={onFailure}\r\n\t\t\t\tcookiePolicy={\"single_host_origin\"}\r\n\t\t\t\tisSignedIn={true}\r\n\t\t\t\tredirectUri={\"http://localhost:3000/home\"}\r\n\t\t\t/>\r\n\t\t\t{/* <Button onClick={signIn} className='login_button'>\r\n                Login\r\n            </Button>\r\n         */}\r\n\t\t\t<p>THIS IS A TEST: {test}</p>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}