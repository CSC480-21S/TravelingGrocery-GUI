{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Login_SingOut\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport { GoogleLogin } from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button'; //Local components\n\nimport { send_Google_User_info } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  client_id\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory(); //when Login works\n\n  const onSuccess = response => {\n    console.log(`Login Success: currentUser ${response.profileObj}`);\n    console.log('Loaded: ' + loaded);\n    dispatch(send_Google_User_info(response));\n    history.push('/home');\n  }; //When login is a failute\n\n\n  const onFailure = response => {\n    console.log('Error: ' + response);\n  };\n\n  const {\n    signIn,\n    loaded\n  } = useGoogleLogin({\n    onSuccess: onSuccess,\n    clientId: client_id,\n    isSignedIn: true,\n    onFailure: onFailure\n  }); //=================================\n\n  useEffect(() => {\n    console.log('From login');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: client_id,\n      buttonText: \"Login\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: 'single_host_origin',\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"iI2Snt8zn2E2eWuzYFlGIkq6DcM=\", false, function () {\n  return [useDispatch, useHistory, useGoogleLogin];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Login_SingOut/Login.js"],"names":["React","useEffect","useGoogleLogin","GoogleLogin","useHistory","useDispatch","Button","send_Google_User_info","Login","client_id","dispatch","history","onSuccess","response","console","log","profileObj","loaded","push","onFailure","signIn","clientId","isSignedIn"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,WAAT,QAA2B,oBAA3B;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,SAASC,qBAAT,QAAsC,uBAAtC;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA;;AAC3B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGP,UAAU,EAA1B,CAF2B,CAI3B;;AACA,QAAMQ,SAAS,GAAIC,QAAD,IAAc;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BF,QAAQ,CAACG,UAAW,EAA9D;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaE,MAAzB;AACAP,IAAAA,QAAQ,CAACH,qBAAqB,CAACM,QAAD,CAAtB,CAAR;AACAF,IAAAA,OAAO,CAACO,IAAR,CAAa,OAAb;AACH,GALD,CAL2B,CAW3B;;;AACA,QAAMC,SAAS,GAAIN,QAAD,IAAc;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,QAAxB;AACH,GAFD;;AAIA,QAAM;AAAEO,IAAAA,MAAF;AAAUH,IAAAA;AAAV,MAAqBf,cAAc,CAAC;AACtCU,IAAAA,SAAS,EAAEA,SAD2B;AAEtCS,IAAAA,QAAQ,EAAEZ,SAF4B;AAGtCa,IAAAA,UAAU,EAAE,IAH0B;AAItCH,IAAAA,SAAS,EAAEA;AAJ2B,GAAD,CAAzC,CAhB2B,CAsB3B;;AAEAlB,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,QAAQ,EAAEN,SADd;AAEI,MAAA,UAAU,EAAC,OAFf;AAGI,MAAA,SAAS,EAAEG,SAHf;AAII,MAAA,SAAS,EAAEO,SAJf;AAKI,MAAA,YAAY,EAAE,oBALlB;AAMI,MAAA,UAAU,EAAE;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgBH,CA5CD;;GAAMX,K;UACeH,W,EACDD,U,EAcWF,c;;;KAhBzBM,K;AA8CN,eAAeA,KAAf","sourcesContent":["import {React, useEffect} from 'react'\r\n\r\nimport { useGoogleLogin } from 'react-google-login'\r\nimport { GoogleLogin} from 'react-google-login'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '@material-ui/core/Button'\r\n//Local components\r\nimport { send_Google_User_info } from '../../actions/actions'\r\n\r\nconst Login = ({client_id}) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    //when Login works\r\n    const onSuccess = (response) => {\r\n        console.log(`Login Success: currentUser ${response.profileObj}`)\r\n        console.log('Loaded: ' + loaded)\r\n        dispatch(send_Google_User_info(response))\r\n        history.push('/home')\r\n    }\r\n    //When login is a failute\r\n    const onFailure = (response) => {\r\n        console.log('Error: ' + response)\r\n    }\r\n\r\n    const { signIn, loaded } = useGoogleLogin({\r\n        onSuccess: onSuccess,\r\n        clientId: client_id,\r\n        isSignedIn: true,\r\n        onFailure: onFailure,\r\n    })\r\n    //=================================\r\n\r\n    useEffect(()=>{\r\n        console.log('From login')\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <GoogleLogin\r\n                clientId={client_id}\r\n                buttonText=\"Login\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n            />\r\n            {/* <Button onClick={signIn} className='login_button'>\r\n                Login\r\n            </Button>\r\n         */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}