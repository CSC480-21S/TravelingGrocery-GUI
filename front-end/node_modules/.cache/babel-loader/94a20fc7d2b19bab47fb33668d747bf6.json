{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\Lists\\\\Edit_List\\\\List\\\\Item.js\",\n    _s = $RefreshSig$();\n\n//Regular imports\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useDispatch } from \"react-redux\"; //Actions\n\nimport { set_list_to_be_updated } from \"../../../../actions/actions\"; //Components\n\nimport First_Section_List from \"./Sections/First/First_Section_List\";\nimport Second_Section_List from \"./Sections/Second/Second_Section_List\";\nimport Third_Section_List from \"./Sections/Third/Third_Section_List\"; //Styles\n\nimport makeStyles from \"./item_styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = ({\n  item,\n  set_new_Item,\n  new_Items\n}) => {\n  _s();\n\n  const styles = makeStyles();\n  const dispatch = useDispatch(); //Edit List Content\n\n  const [item_count, set_Item_count] = useState(item.count);\n  const [isChecked, set_isChecked] = useState(false);\n  const isMounted = useRef(false);\n  const isMounted2 = useRef(false); //UPDATE CHECK OF CURENT ITEM\n\n  useEffect(() => {\n    //Prevent rendering on mount\n    if (isMounted.current) {\n      console.log(isChecked);\n      new_Items.map(obj => {\n        if (obj.id === item.id) {\n          /* \t\t\t\t\tconsole.log(\"ISCHECKED: \" + isChecked);\r\n          console.log(\"OBJ: \" + obj.isChecked); */\n          obj.isChecked = isChecked;\n        }\n      });\n      set_new_Item(new_Items);\n      dispatch(set_list_to_be_updated(new_Items));\n      console.log(\"New Items CHECK: \" + JSON.stringify(new_Items));\n    } else {\n      isMounted.current = true;\n    }\n  }, [isChecked]); //UPDATE COUNT OF CURRENT ITEM\n\n  useEffect(() => {\n    //Prevent rendering on mount\n    if (isMounted2.current) {\n      //console.log(`COUNT: ${item_count}`);\n      new_Items.map(obj => {\n        if (obj.id === item.id) {\n          obj.count = item_count;\n        }\n      });\n      set_new_Item(new_Items);\n      dispatch(set_list_to_be_updated(new_Items)); //console.log(\"New Items COUNT: \" + JSON.stringify(new_Items));\n    } else {\n      isMounted2.current = true;\n    }\n  }, [item_count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: 20,\n      paddingRight: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: isChecked,\n          onChange: () => set_isChecked(!isChecked),\n          inputProps: {\n            \"aria-label\": \"primary checkbox\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.item_Image_Container,\n        children: /*#__PURE__*/_jsxDEV(First_Section_List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.item_details_Container,\n        children: /*#__PURE__*/_jsxDEV(Second_Section_List, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.third_section_list_Container,\n        children: /*#__PURE__*/_jsxDEV(Third_Section_List, {\n          item_count: item_count,\n          set_Item_count: set_Item_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Item, \"BXAIrhTIhDVk39dgNasQLB5Gv/U=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/Lists/Edit_List/List/Item.js"],"names":["React","useState","useEffect","useRef","Grid","Checkbox","useDispatch","set_list_to_be_updated","First_Section_List","Second_Section_List","Third_Section_List","makeStyles","Item","item","set_new_Item","new_Items","styles","dispatch","item_count","set_Item_count","count","isChecked","set_isChecked","isMounted","isMounted2","current","console","log","map","obj","id","JSON","stringify","paddingLeft","paddingRight","container","item_Image_Container","item_details_Container","third_section_list_Container"],"mappings":"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","sourcesContent":["//Regular imports\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useDispatch } from \"react-redux\";\r\n//Actions\r\nimport { set_list_to_be_updated } from \"../../../../actions/actions\";\r\n//Components\r\nimport First_Section_List from \"./Sections/First/First_Section_List\";\r\nimport Second_Section_List from \"./Sections/Second/Second_Section_List\";\r\nimport Third_Section_List from \"./Sections/Third/Third_Section_List\";\r\n\r\n//Styles\r\nimport makeStyles from \"./item_styles\";\r\n\r\nconst Item = ({ item, set_new_Item, new_Items }) => {\r\n\tconst styles = makeStyles();\r\n\tconst dispatch = useDispatch();\r\n\t//Edit List Content\r\n\tconst [item_count, set_Item_count] = useState(item.count);\r\n\tconst [isChecked, set_isChecked] = useState(false);\r\n\tconst isMounted = useRef(false);\r\n\tconst isMounted2 = useRef(false);\r\n\r\n\t//UPDATE CHECK OF CURENT ITEM\r\n\tuseEffect(() => {\r\n\t\t//Prevent rendering on mount\r\n\t\tif (isMounted.current) {\r\n\t\t\tconsole.log(isChecked);\r\n\t\t\tnew_Items.map((obj) => {\r\n\t\t\t\tif (obj.id === item.id) {\r\n\t\t\t\t\t/* \t\t\t\t\tconsole.log(\"ISCHECKED: \" + isChecked);\r\n\t\t\t\t\tconsole.log(\"OBJ: \" + obj.isChecked); */\r\n\t\t\t\t\tobj.isChecked = isChecked;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tset_new_Item(new_Items);\r\n\t\t\tdispatch(set_list_to_be_updated(new_Items));\r\n\t\t\tconsole.log(\"New Items CHECK: \" + JSON.stringify(new_Items));\r\n\t\t} else {\r\n\t\t\tisMounted.current = true;\r\n\t\t}\r\n\t}, [isChecked]);\r\n\r\n\t//UPDATE COUNT OF CURRENT ITEM\r\n\tuseEffect(() => {\r\n\t\t//Prevent rendering on mount\r\n\t\tif (isMounted2.current) {\r\n\t\t\t//console.log(`COUNT: ${item_count}`);\r\n\t\t\tnew_Items.map((obj) => {\r\n\t\t\t\tif (obj.id === item.id) {\r\n\t\t\t\t\tobj.count = item_count;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tset_new_Item(new_Items);\r\n\t\t\tdispatch(set_list_to_be_updated(new_Items));\r\n\t\t\t//console.log(\"New Items COUNT: \" + JSON.stringify(new_Items));\r\n\t\t} else {\r\n\t\t\tisMounted2.current = true;\r\n\t\t}\r\n\t}, [item_count]);\r\n\r\n\treturn (\r\n\t\t<div style={{ paddingLeft: 20, paddingRight: 20 }}>\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t{/* Item image */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tchecked={isChecked}\r\n\t\t\t\t\t\tonChange={() => set_isChecked(!isChecked)}\r\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.item_Image_Container}>\r\n\t\t\t\t\t<First_Section_List />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={styles.item_details_Container}>\r\n\t\t\t\t\t<Second_Section_List item={item} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.third_section_list_Container}>\r\n\t\t\t\t\t<Third_Section_List\r\n\t\t\t\t\t\titem_count={item_count}\r\n\t\t\t\t\t\tset_Item_count={set_Item_count}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Item;\r\n"]},"metadata":{},"sourceType":"module"}