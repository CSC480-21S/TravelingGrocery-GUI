{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CSC480\\\\TravelingGrocery-GUI\\\\front-end\\\\src\\\\components\\\\HomePage\\\\CreateList.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useDispatch } from \"react-redux\";\nimport makeStyles from \"../../styles/CreasteList\";\nimport { Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { create_List } from \"../../actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateList = props => {\n  _s();\n\n  const profile = useSelector(state => state.login); //Retrieve Login information from the store\n\n  const [list, setList] = useState({\n    id: \"\",\n    name: \"\",\n    userId: profile.profileObj.email\n  });\n  const styles = makeStyles();\n  const dispatch = useDispatch();\n  const {\n    onClose,\n    open\n  } = props;\n\n  const handleClose = () => {\n    clearInput();\n    onClose();\n  };\n\n  const clearInput = () => {\n    setList({\n      name: \" \"\n    });\n  };\n\n  const createNewList = async e => {\n    e.preventDefault();\n    dispatch(create_List(list, profile.profileObj.email));\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      open: open,\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(DialogActions, {\n        disableSpacing: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          className: styles.exitIcon,\n          size: \"small\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.title,\n          children: \" Create List \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `${styles.root} ${styles.mainContainer}`,\n        onSubmit: createNewList,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: styles.formControl,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            className: styles.inputText,\n            value: list.name,\n            onChange: e => setList({ ...list,\n              name: e.target.value,\n              id: e.target.value\n            }),\n            placeholder: \"Enter Name\",\n            InputProps: {\n              disableUnderline: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: styles.submitButton,\n            children: \"Create New List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateList, \"aV4y0i3fpZxTyTvuqgOpxHD+0F4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CreateList;\nexport default CreateList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateList\");","map":{"version":3,"sources":["D:/Projects/CSC480/TravelingGrocery-GUI/front-end/src/components/HomePage/CreateList.js"],"names":["React","useState","Dialog","TextField","Button","CloseIcon","IconButton","DialogActions","DialogContent","FormControl","useDispatch","makeStyles","Typography","useSelector","create_List","CreateList","props","profile","state","login","list","setList","id","name","userId","profileObj","email","styles","dispatch","onClose","open","handleClose","clearInput","createNewList","e","preventDefault","main","exitIcon","title","root","mainContainer","formControl","inputText","target","value","disableUnderline","submitButton"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport makeStyles from \"../../styles/CreasteList\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { create_List } from \"../../actions/actions\";\r\n\r\nconst CreateList = (props) => {\r\n\tconst profile = useSelector((state) => state.login); //Retrieve Login information from the store\r\n\tconst [list, setList] = useState({\r\n\t\tid: \"\",\r\n\t\tname: \"\",\r\n\t\tuserId: profile.profileObj.email,\r\n\t});\r\n\tconst styles = makeStyles();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { onClose, open } = props;\r\n\r\n\tconst handleClose = () => {\r\n\t\tclearInput();\r\n\t\tonClose();\r\n\t};\r\n\tconst clearInput = () => {\r\n\t\tsetList({ name: \" \" });\r\n\t};\r\n\tconst createNewList = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(create_List(list, profile.profileObj.email));\r\n\t\thandleClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog onClose={handleClose} open={open} className={styles.main}>\r\n\t\t\t\t<DialogActions disableSpacing>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tclassName={styles.exitIcon}\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseIcon></CloseIcon>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t<Typography className={styles.title}> Create List </Typography>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName={`${styles.root} ${styles.mainContainer}`}\r\n\t\t\t\t\tonSubmit={createNewList}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FormControl className={styles.formControl}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tclassName={styles.inputText}\r\n\t\t\t\t\t\t\tvalue={list.name}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetList({ ...list, name: e.target.value, id: e.target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tdisableUnderline: true,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></TextField>\r\n\t\t\t\t\t\t<Button type=\"submit\" className={styles.submitButton}>\r\n\t\t\t\t\t\t\tCreate New List\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</form>\r\n\t\t\t\t<DialogActions></DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CreateList;\r\n"]},"metadata":{},"sourceType":"module"}